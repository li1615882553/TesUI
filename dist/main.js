/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./index.js":
/*!******************!*\
  !*** ./index.js ***!
  \******************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var tes_work__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tes-work */ \"./node_modules/tes-work/lib/Tes.js\");\n/* harmony import */ var tes_work__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(tes_work__WEBPACK_IMPORTED_MODULE_0__);\n\r\n\r\nconsole.log(tes_work__WEBPACK_IMPORTED_MODULE_0__.Control)\n\n//# sourceURL=webpack://testest/./index.js?");

/***/ }),

/***/ "./node_modules/tes-work/lib/Tes.js":
/*!******************************************!*\
  !*** ./node_modules/tes-work/lib/Tes.js ***!
  \******************************************/
/***/ (function(module) {

eval("(function webpackUniversalModuleDefinition(root, factory) {\n\tif(true)\n\t\tmodule.exports = factory();\n\telse {}\n})(this, () => {\nreturn /******/ (() => { // webpackBootstrap\n/******/ \t\"use strict\";\n/******/ \tvar __webpack_modules__ = ([\n/* 0 */,\n/* 1 */\n/***/ ((__unused_webpack_module, __webpack_exports__, __nested_webpack_require_526__) => {\n\n__nested_webpack_require_526__.r(__webpack_exports__);\n/* harmony export */ __nested_webpack_require_526__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _shared_util_index__WEBPACK_IMPORTED_MODULE_0__ = __nested_webpack_require_526__(2);\n/* harmony import */ var _static_define_init_index__WEBPACK_IMPORTED_MODULE_1__ = __nested_webpack_require_526__(4);\n/* harmony import */ var _prototype_$watch__WEBPACK_IMPORTED_MODULE_2__ = __nested_webpack_require_526__(19);\n/* harmony import */ var _prototype_$destory__WEBPACK_IMPORTED_MODULE_3__ = __nested_webpack_require_526__(35);\n/* harmony import */ var _prototype_$cloneNode__WEBPACK_IMPORTED_MODULE_4__ = __nested_webpack_require_526__(36);\n/* harmony import */ var _components_ux_dom_dom__WEBPACK_IMPORTED_MODULE_5__ = __nested_webpack_require_526__(15);\n\r\n\r\n\r\n\r\n\r\n\r\n//TODO 父类中$属性不可写,非$属性会收集对应的依赖\r\nvar Control = /** @class */ (function () {\r\n    function Control() {\r\n        /**组件是否挂载到文档流 */\r\n        this.$mounted = false;\r\n        return this.$init(this.$options);\r\n    }\r\n    /**\r\n     * 初始化组件\r\n     * @param options\r\n     * @returns\r\n     */\r\n    Control.prototype.$init = function (options) {\r\n        var name = options.name || \"anonymous-\".concat((0,_shared_util_index__WEBPACK_IMPORTED_MODULE_0__.uid)());\r\n        var targetProxy = _static_define_init_index__WEBPACK_IMPORTED_MODULE_1__[\"default\"].call(this, name, options);\r\n        return targetProxy;\r\n    };\r\n    Object.defineProperty(Control.prototype, \"elem\", {\r\n        /**\r\n         * 关联元素  节点可以由 update 方法生成,也可以直接被用户指定\r\n         */\r\n        get: function () {\r\n            if (!this._elem) {\r\n                this.$forceUpdate.getValue();\r\n            }\r\n            return this._elem;\r\n        },\r\n        set: function (value) {\r\n            var oldELem = this._elem;\r\n            if (value != oldELem) {\r\n                if (oldELem) {\r\n                    var parent_1 = oldELem.parentElement;\r\n                    if (parent_1) {\r\n                        if (value) {\r\n                            parent_1.replaceChild(value, oldELem);\r\n                        }\r\n                        else {\r\n                            parent_1.removeChild(oldELem);\r\n                        }\r\n                    }\r\n                    delete oldELem.__control__;\r\n                }\r\n                this._elem = value;\r\n                if (value) {\r\n                    value.__control__ = value.__control__ || this;\r\n                }\r\n            }\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    /**实例初始化后被调用 */\r\n    Control.prototype.componentWillCreate = function (target) { };\r\n    /**实例创建完成后被调用 */\r\n    Control.prototype.componentCreated = function (target) { };\r\n    /**组件挂载前事件 */\r\n    Control.prototype.componentWillMount = function () { };\r\n    /**组件挂载后的事件 */\r\n    Control.prototype.componentMounted = function () { };\r\n    /**组件销毁前事件 */\r\n    Control.prototype.componentWillDestory = function () { };\r\n    /**组件销毁后事件 */\r\n    Control.prototype.componentDestoryed = function () { };\r\n    /**组件更新前将被调用 */\r\n    Control.prototype.componentWillUpdate = function () { };\r\n    /**组件更新后调用 */\r\n    Control.prototype.componentUpdated = function () { };\r\n    /**\r\n    * 将当前控件渲染到指定的父控件或节点\r\n    * @param parent 要渲染的目标控件或节点  如果为 null 则移除当前控件\r\n    * @param refChild 在指定的子控件或节点前添加,如果为空则添加到末尾\r\n    */\r\n    Control.prototype.$renderTo = function (parent, refChild) {\r\n        // execWillMountMth();\r\n        if (parent) {\r\n            //当前组件存在elem\r\n            if (this.elem) {\r\n                if (parent instanceof Control) {\r\n                    parent = parent.body || parent.elem;\r\n                }\r\n                if (refChild) {\r\n                    parent.insertBefore(this.elem, refChild instanceof Control ? refChild.elem : refChild);\r\n                }\r\n                else {\r\n                    parent.appendChild(this.elem);\r\n                }\r\n            }\r\n            // execWillMountMth();\r\n            // execMountedMth(this);\r\n        }\r\n        else if (this._elem && this._elem.parentNode) {\r\n            this.$destory();\r\n            this._elem.parentNode.removeChild(this._elem);\r\n        }\r\n    };\r\n    /**组件渲染函数 */\r\n    Control.prototype.render = function () { };\r\n    /**\r\n    * 在当前控件查找指定的子控件或节点\r\n    * @param selector 要查找的 css 选择器,如果为空则返回跟控件或节点\r\n    * @returns 返回子控件或节点,如果找不到则返回null\r\n    */\r\n    Control.prototype.find = function (selector) {\r\n        //获取组件HTMLElement, 如果没有,就调用update获取\r\n        var elem = this.elem;\r\n        if (selector) {\r\n            elem = elem && (0,_components_ux_dom_dom__WEBPACK_IMPORTED_MODULE_5__.find)(elem, selector);\r\n            //__control__ 当前元素关联的控件实例\r\n            return elem && elem.__control__ || elem;\r\n        }\r\n        return this.$VNode ? this.$VNode.result : elem;\r\n    };\r\n    Control.$cloneNode = _prototype_$cloneNode__WEBPACK_IMPORTED_MODULE_4__[\"default\"];\r\n    return Control;\r\n}());\r\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Control);\r\n(0,_shared_util_index__WEBPACK_IMPORTED_MODULE_0__.assign)(Control.prototype, {\r\n    $watch: _prototype_$watch__WEBPACK_IMPORTED_MODULE_2__[\"default\"],\r\n    $destory: _prototype_$destory__WEBPACK_IMPORTED_MODULE_3__[\"default\"]\r\n});\r\n\n\n/***/ }),\n/* 2 */\n/***/ ((__unused_webpack_module, __webpack_exports__, __nested_webpack_require_5856__) => {\n\n__nested_webpack_require_5856__.r(__webpack_exports__);\n/* harmony export */ __nested_webpack_require_5856__.d(__webpack_exports__, {\n/* harmony export */   \"apply\": () => (/* binding */ apply),\n/* harmony export */   \"assign\": () => (/* binding */ assign),\n/* harmony export */   \"cache\": () => (/* binding */ cache),\n/* harmony export */   \"create\": () => (/* binding */ create),\n/* harmony export */   \"defineProperty\": () => (/* binding */ defineProperty),\n/* harmony export */   \"deleteProperty\": () => (/* binding */ deleteProperty),\n/* harmony export */   \"emptyArray\": () => (/* binding */ emptyArray),\n/* harmony export */   \"emptyObject\": () => (/* binding */ emptyObject),\n/* harmony export */   \"freeze\": () => (/* binding */ freeze),\n/* harmony export */   \"getOwnPropertyDescriptor\": () => (/* binding */ getOwnPropertyDescriptor),\n/* harmony export */   \"getPrototypeOf\": () => (/* binding */ getPrototypeOf),\n/* harmony export */   \"has\": () => (/* binding */ has),\n/* harmony export */   \"hasOwnProperty\": () => (/* binding */ hasOwnProperty),\n/* harmony export */   \"isArray\": () => (/* binding */ isArray),\n/* harmony export */   \"isEmptyObject\": () => (/* binding */ isEmptyObject),\n/* harmony export */   \"isEqual\": () => (/* binding */ isEqual),\n/* harmony export */   \"isFunction\": () => (/* binding */ isFunction),\n/* harmony export */   \"isObject\": () => (/* binding */ isObject),\n/* harmony export */   \"isPlainObject\": () => (/* binding */ isPlainObject),\n/* harmony export */   \"isReserved\": () => (/* binding */ isReserved),\n/* harmony export */   \"isString\": () => (/* binding */ isString),\n/* harmony export */   \"isSymbol\": () => (/* binding */ isSymbol),\n/* harmony export */   \"keys\": () => (/* binding */ keys),\n/* harmony export */   \"noop\": () => (/* binding */ noop),\n/* harmony export */   \"ownKeys\": () => (/* binding */ ownKeys),\n/* harmony export */   \"prototype\": () => (/* binding */ prototype),\n/* harmony export */   \"returnArg\": () => (/* binding */ returnArg),\n/* harmony export */   \"set\": () => (/* binding */ set),\n/* harmony export */   \"shallowCopy\": () => (/* binding */ shallowCopy),\n/* harmony export */   \"toRaw\": () => (/* binding */ toRaw),\n/* harmony export */   \"toString\": () => (/* binding */ toString),\n/* harmony export */   \"uid\": () => (/* binding */ uid)\n/* harmony export */ });\n/* harmony import */ var _core_observable_Observe__WEBPACK_IMPORTED_MODULE_0__ = __nested_webpack_require_5856__(3);\nvar prototype = Object.prototype, freeze = Object.freeze, keys = Object.keys, create = Object.create, assign = Object.assign;\r\nvar hasOwnProperty = prototype.hasOwnProperty, toString = prototype.toString;\r\nvar isArray = Array.isArray;\r\nvar has = Reflect.has, apply = Reflect.apply, ownKeys = Reflect.ownKeys, set = Reflect.set, defineProperty = Reflect.defineProperty, deleteProperty = Reflect.deleteProperty, getOwnPropertyDescriptor = Reflect.getOwnPropertyDescriptor, getPrototypeOf = Reflect.getPrototypeOf;\r\nvar emptyObject = freeze({});\r\nvar emptyArray = freeze([]);\r\nfunction isFunction(target) {\r\n    return typeof target === 'function';\r\n}\r\nfunction isObject(target) {\r\n    return target !== null && typeof target === 'object';\r\n}\r\nfunction isSymbol(target) {\r\n    return typeof target === 'symbol';\r\n}\r\n/**\r\n * 判断传入的两个值是否相等\r\n */\r\nfunction isEqual(value, value2) {\r\n    return value === value2 || (value !== value && value2 !== value2);\r\n}\r\n/**\r\n * 判断一个对象是否是一个空对象\r\n * @param value 需要判断的对象\r\n * @returns\r\n */\r\nfunction isEmptyObject(value) {\r\n    for (var item in value)\r\n        return false;\r\n    return true;\r\n}\r\n/**\r\n * 返回浅拷贝内容\r\n * @param value\r\n * @returns\r\n */\r\nfunction shallowCopy(value) {\r\n    if (isArray(value)) {\r\n        return value.slice(0);\r\n    }\r\n    else if (isObject(value)) {\r\n        return assign({}, value);\r\n    }\r\n    return value;\r\n}\r\n/**\r\n * 创建一个可以缓存方法返回值的方法\r\n * @param fn 需要缓存结果的方法\r\n * @returns 一个新方法,如果已经访问过则从缓存中获取,否则重新执行\r\n */\r\nfunction cache(fn) {\r\n    var cache = create(null);\r\n    return function (key) {\r\n        if (has(cache, key))\r\n            return cache[key];\r\n        return (cache[key]) = fn(key);\r\n    };\r\n}\r\n/**\r\n * 判断首字母是否是 $\r\n * $字母为系统内置\r\n */\r\nvar isReserved = cache(function (key) {\r\n    var charCode = \"\".concat(key).charCodeAt(0);\r\n    return charCode === 0x24;\r\n});\r\n/**\r\n * 判断一个值是否是String\r\n * @param value 需要判断的对象\r\n * @returns\r\n */\r\nfunction isString(value) {\r\n    return typeof value === 'string';\r\n}\r\n/**\r\n * 判断传入对象是否是纯粹的对象\r\n * @param value 需要判断的对象\r\n * @returns  是否是纯粹的对象\r\n */\r\nfunction isPlainObject(value) {\r\n    return toString.call(value) === \"[object Object]\";\r\n}\r\nvar _id = 0;\r\n/**\r\n * 当前全局唯一UID\r\n */\r\nfunction uid() {\r\n    return \"\".concat(++_id);\r\n}\r\n/**空方法 */\r\nfunction noop() { }\r\n/**返回传入的首个参数 */\r\nfunction returnArg(value) { return value; }\r\n\r\nfunction getOriginObj(targetProxy, originObj, hasTransObj) {\r\n    if (hasTransObj.indexOf(targetProxy) !== -1)\r\n        return;\r\n    if (!originObj)\r\n        originObj = {};\r\n    hasTransObj.push(targetProxy);\r\n    if (isObject(targetProxy)) {\r\n        for (var key in targetProxy) {\r\n            if (isObject(targetProxy[key])) {\r\n                originObj[key] = getOriginObj(targetProxy[key], originObj[key], hasTransObj);\r\n            }\r\n            else {\r\n                if (hasTransObj.indexOf(targetProxy[key]) == -1) {\r\n                    originObj[key] = _core_observable_Observe__WEBPACK_IMPORTED_MODULE_0__[\"default\"].observeProxyMap.has(targetProxy[key]) ? _core_observable_Observe__WEBPACK_IMPORTED_MODULE_0__[\"default\"].observeProxyMap.get(targetProxy[key]).target : targetProxy[key];\r\n                }\r\n            }\r\n        }\r\n    }\r\n    return originObj;\r\n}\r\nfunction toRaw(targetProxy) {\r\n    return getOriginObj(targetProxy, {}, []);\r\n}\r\n\n\n/***/ }),\n/* 3 */\n/***/ ((__unused_webpack_module, __webpack_exports__, __nested_webpack_require_11664__) => {\n\n__nested_webpack_require_11664__.r(__webpack_exports__);\n/* harmony export */ __nested_webpack_require_11664__.d(__webpack_exports__, {\n/* harmony export */   \"ToggleCollection\": () => (/* binding */ ToggleCollection),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   \"observerProxySetValue\": () => (/* binding */ observerProxySetValue)\n/* harmony export */ });\n/* harmony import */ var _shared_util_index__WEBPACK_IMPORTED_MODULE_0__ = __nested_webpack_require_11664__(2);\nvar __spreadArray = ( false) || function (to, from, pack) {\r\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\r\n        if (ar || !(i in from)) {\r\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\r\n            ar[i] = from[i];\r\n        }\r\n    }\r\n    return to.concat(ar || Array.prototype.slice.call(from));\r\n};\r\n\r\nvar emptyBeforOptions = { before: undefined };\r\nfunction createObserveOptions(target) {\r\n    return {\r\n        //原始对象\r\n        target: target,\r\n        //订阅了当前观察者子集对象更新的 watcher 集合\r\n        //[key in target]: Set<Watcher>\r\n        subs: Object.create(null),\r\n        //订阅了当前观察者对象深度监听的 watcher 集合\r\n        deepSubs: new Set(),\r\n        //上次的值\r\n        lastValue: Object.create(null),\r\n        //是否是数组\r\n        isArray: Array.isArray(target)\r\n    };\r\n}\r\nvar Observe = /** @class */ (function () {\r\n    function Observe() {\r\n    }\r\n    Observe.observe = function (target, options) {\r\n        //在这之前创建过观察者对象\r\n        if (this.observeMap.has(target))\r\n            return this.observeMap.get(target).proxy;\r\n        //如果传入的就是观察者对象,则直接返回\r\n        if (this.observeProxyMap.has(target))\r\n            return this.observeProxyMap.get(target).proxy;\r\n        //创建观察者对象\r\n        return this.createObserve(target, options);\r\n    };\r\n    Observe.createObserve = function (target, options) {\r\n        var observeOptions = createObserveOptions(target);\r\n        /**创建当前对象的观察者对象 */\r\n        var proxy = observeOptions.proxy = new Proxy(target, {\r\n            get: createGetProxy(options && options.get || emptyBeforOptions, observeOptions),\r\n            set: createSetProxy(options && options.set || emptyBeforOptions, observeOptions),\r\n            ownKeys: createOwnKeysProxy(observeOptions),\r\n            deleteProperty: createDeletePropertyProxy(options && options.deleteProperty || emptyBeforOptions, observeOptions)\r\n        });\r\n        //更新 两个映射关系\r\n        this.observeMap.set(target, observeOptions);\r\n        this.observeProxyMap.set(proxy, observeOptions);\r\n        return proxy;\r\n    };\r\n    Observe.observable = function (obj) {\r\n        return (0,_shared_util_index__WEBPACK_IMPORTED_MODULE_0__.isPlainObject)(obj) || (0,_shared_util_index__WEBPACK_IMPORTED_MODULE_0__.isArray)(obj) ? this.observe(obj) : obj;\r\n    };\r\n    Observe.getOriginTarget = function (val) {\r\n        return Observe.observeProxyMap.has(val) ? Observe.observeProxyMap.get(val).target : val;\r\n    };\r\n    /**原始对象与选项参数以及Proxy对象的关联映射 */\r\n    Observe.observeMap = new WeakMap();\r\n    /**Proxy对象和选项参数的关联映射 */\r\n    Observe.observeProxyMap = new WeakMap();\r\n    return Observe;\r\n}());\r\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Observe);\r\n/**\r\n * 依赖收集的相应方法\r\n * TODO 当前所有属性都会收集依赖,而且如果深度监听lastValue在最外层无法保存\r\n */\r\nfunction createGetProxy(_a, _b) {\r\n    var before = _a.before;\r\n    var subs = _b.subs, deepSubs = _b.deepSubs, lastValue = _b.lastValue;\r\n    return function (target, name, proxy) {\r\n        if (before) {\r\n            //所有对象的get方法均走这里, 整个实例对象也是一个响应式对象, 比如调用 targetProxy.$emit 也会触发, 所以走before一个是为了去除$开头属性不监听\r\n            var beforeResult = before(target, name, proxy);\r\n            if (beforeResult === 0) {\r\n                return target[name];\r\n            }\r\n        }\r\n        // 计算属性访问 交给计算属性自己处理\r\n        if ((Object.getOwnPropertyDescriptor(target, name) || _shared_util_index__WEBPACK_IMPORTED_MODULE_0__.emptyObject).get) {\r\n            return target[name];\r\n        }\r\n        //获取当前值\r\n        var value = target[name];\r\n        //方法无需收集依赖\r\n        if ((0,_shared_util_index__WEBPACK_IMPORTED_MODULE_0__.isFunction)(value)) { //&& !hasOwnProperty.call(target, name) && has(target, name)\r\n            return value;\r\n        }\r\n        //当前正在收集依赖的watcher   添加到当前数据的订阅中\r\n        var watcher = ToggleCollection.target;\r\n        if (watcher) {\r\n            //添加订阅信息\r\n            deepSubs.has(watcher) || watcher.add(subs, name);\r\n            //存储本次值\r\n            lastValue[name] = value;\r\n        }\r\n        //如果获取的值是对象类型,则返回他的观察者对象\r\n        return Observe.observable(value);\r\n    };\r\n}\r\n/**\r\n * 相应式更新的方法\r\n */\r\nfunction createSetProxy(_a, _b) {\r\n    var _c = _a === void 0 ? _shared_util_index__WEBPACK_IMPORTED_MODULE_0__.emptyObject : _a, before = _c.before;\r\n    var subs = _b.subs, deepSubs = _b.deepSubs, lastValue = _b.lastValue, isArray = _b.isArray;\r\n    return function (target, name, value, proxy) {\r\n        if (before) {\r\n            var beforeResult = before(target, name, value, proxy);\r\n            if (beforeResult === 0) {\r\n                return true;\r\n            }\r\n        }\r\n        //如果属性值是 Object.defineProperty 定义的属性\r\n        if ((Object.getOwnPropertyDescriptor(target, name) || _shared_util_index__WEBPACK_IMPORTED_MODULE_0__.emptyObject).set) {\r\n            target[name] = value;\r\n            return true;\r\n        }\r\n        // 尝试写入值 并 触发更新\r\n        observerProxySetValue(subs, deepSubs, lastValue, isArray, target, name, value, proxy);\r\n        return true;\r\n    };\r\n}\r\n/**\r\n * 遍历数据时收集依赖\r\n */\r\nfunction createOwnKeysProxy(_a) {\r\n    var deepSubs = _a.deepSubs;\r\n    return function (target) {\r\n        // 获取当前正在收集依赖的 watcher\r\n        var watcher = ToggleCollection.target;\r\n        // 当前有正在收集依赖的 watcher\r\n        if (watcher) {\r\n            // 标记深度监听订阅信息\r\n            deepSubs.add(watcher);\r\n        }\r\n        return (0,_shared_util_index__WEBPACK_IMPORTED_MODULE_0__.ownKeys)(target);\r\n    };\r\n}\r\n/**\r\n * 响应式删除数据\r\n */\r\nfunction createDeletePropertyProxy(_a, _b) {\r\n    var _c = _a === void 0 ? _shared_util_index__WEBPACK_IMPORTED_MODULE_0__.emptyObject : _a, before = _c.before;\r\n    var subs = _b.subs, deepSubs = _b.deepSubs, lastValue = _b.lastValue;\r\n    return function (target, name) {\r\n        if (before) {\r\n            var beforeResult = before(target, name);\r\n            if (beforeResult === 0) {\r\n                return true;\r\n            }\r\n        }\r\n        var isDelete = (0,_shared_util_index__WEBPACK_IMPORTED_MODULE_0__.deleteProperty)(target, name);\r\n        //删除成功触发更新\r\n        if (isDelete) {\r\n            triggerUpdate(subs, deepSubs, lastValue, _shared_util_index__WEBPACK_IMPORTED_MODULE_0__.deleteProperty, name);\r\n        }\r\n        return isDelete;\r\n    };\r\n}\r\nfunction observerProxySetValue(subs, deepSubs, lastValue, isArray, target, name, value, proxy) {\r\n    var oldValue = (0,_shared_util_index__WEBPACK_IMPORTED_MODULE_0__.has)(lastValue, name) ? lastValue[name] : target[name];\r\n    if ((0,_shared_util_index__WEBPACK_IMPORTED_MODULE_0__.isEqual)(oldValue, value)) {\r\n        return true;\r\n    }\r\n    //改变值\r\n    target[name] = value;\r\n    //触发更新\r\n    triggerUpdate(subs, deepSubs, lastValue, _shared_util_index__WEBPACK_IMPORTED_MODULE_0__.set, name, value);\r\n}\r\n/**\r\n * 触发更新\r\n * @param subs\r\n * @param deepSubs\r\n * @param lastValue\r\n * @param handler\r\n * @param name\r\n * @param value\r\n */\r\nfunction triggerUpdate(subs, deepSubs, lastValue, handler, name, value) {\r\n    //订阅了当前参数更新的 watcher 集合\r\n    var sub = subs[name];\r\n    //存储本次值改变  更新lastValue\r\n    if (sub && sub.size) {\r\n        handler(lastValue, name, value);\r\n    }\r\n    //遍历当前参数订阅以及父对象的深度监听数据\r\n    for (var _i = 0, _a = __spreadArray(__spreadArray([], Array.from(sub || []), true), deepSubs, true); _i < _a.length; _i++) {\r\n        var watcher = _a[_i];\r\n        watcher.update();\r\n    }\r\n}\r\n/**\r\n * 触发依赖收集\r\n */\r\nvar ToggleCollection = /** @class */ (function () {\r\n    function ToggleCollection(_targetStack, _target) {\r\n        this._targetStack = _targetStack;\r\n        this._target = _target;\r\n    }\r\n    Object.defineProperty(ToggleCollection, \"targetStack\", {\r\n        get: function () {\r\n            return ToggleCollection.instance._targetStack;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ToggleCollection, \"target\", {\r\n        get: function () {\r\n            return ToggleCollection.instance._target;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * watch 收集依赖\r\n     * @param target\r\n     * @param fn\r\n     * @returns\r\n     */\r\n    ToggleCollection.toggle = function (target, fn) {\r\n        this.targetStack.push(target);\r\n        ToggleCollection.instance._target = target;\r\n        var result = fn();\r\n        this.targetStack.pop();\r\n        ToggleCollection.instance._target = this.targetStack[this.targetStack.length - 1];\r\n        return result;\r\n    };\r\n    /**\r\n     * 用于防止方法执行时被依赖收集\r\n     * @param fn 执行的方法\r\n     */\r\n    ToggleCollection.safety = function (fn) {\r\n        return this.toggle(null, fn);\r\n    };\r\n    ToggleCollection.instance = new ToggleCollection([], null);\r\n    return ToggleCollection;\r\n}());\r\n\r\n\n\n/***/ }),\n/* 4 */\n/***/ ((__unused_webpack_module, __webpack_exports__, __nested_webpack_require_20914__) => {\n\n__nested_webpack_require_20914__.r(__webpack_exports__);\n/* harmony export */ __nested_webpack_require_20914__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ init)\n/* harmony export */ });\n/* harmony import */ var _core_observable_Observe__WEBPACK_IMPORTED_MODULE_0__ = __nested_webpack_require_20914__(3);\n/* harmony import */ var _shared_const_observeOps__WEBPACK_IMPORTED_MODULE_1__ = __nested_webpack_require_20914__(5);\n/* harmony import */ var _core_init_initForceUpdate__WEBPACK_IMPORTED_MODULE_2__ = __nested_webpack_require_20914__(6);\n/* harmony import */ var _initOptions__WEBPACK_IMPORTED_MODULE_3__ = __nested_webpack_require_20914__(28);\n/* harmony import */ var _initProps__WEBPACK_IMPORTED_MODULE_4__ = __nested_webpack_require_20914__(30);\n/* harmony import */ var _initMethods__WEBPACK_IMPORTED_MODULE_5__ = __nested_webpack_require_20914__(32);\n/* harmony import */ var _initComputed__WEBPACK_IMPORTED_MODULE_6__ = __nested_webpack_require_20914__(33);\n/* harmony import */ var _initWatch__WEBPACK_IMPORTED_MODULE_7__ = __nested_webpack_require_20914__(34);\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n/**\r\n * 初始化当前组件属性\r\n * @param name 组件名称\r\n * @param options 组件配置\r\n * @param userOptions 用户组件配置\r\n * @returns\r\n */\r\nfunction init(name, options) {\r\n    //创建整个实例的观察者对象\r\n    var TesProxy = _core_observable_Observe__WEBPACK_IMPORTED_MODULE_0__[\"default\"].observe(this, _shared_const_observeOps__WEBPACK_IMPORTED_MODULE_1__[\"default\"]);\r\n    (0,_initOptions__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(this, name);\r\n    (0,_initProps__WEBPACK_IMPORTED_MODULE_4__[\"default\"])(this, TesProxy);\r\n    (0,_initMethods__WEBPACK_IMPORTED_MODULE_5__[\"default\"])(this, options.methods, TesProxy);\r\n    //运行 beforeCreate 生命周期函数\r\n    this.componentWillCreate();\r\n    (0,_initComputed__WEBPACK_IMPORTED_MODULE_6__[\"default\"])(this, options, TesProxy);\r\n    (0,_initWatch__WEBPACK_IMPORTED_MODULE_7__[\"default\"])(this, options, TesProxy);\r\n    //确保renderWatcher在当前组件最后创建   userWatcher执行顺序优于renderWatcher\r\n    (0,_core_init_initForceUpdate__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(this, TesProxy);\r\n    //运行 created 生命周期函数\r\n    this.componentCreated();\r\n    return TesProxy;\r\n}\r\n\n\n/***/ }),\n/* 5 */\n/***/ ((__unused_webpack_module, __webpack_exports__, __nested_webpack_require_23065__) => {\n\n__nested_webpack_require_23065__.r(__webpack_exports__);\n/* harmony export */ __nested_webpack_require_23065__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _util_index__WEBPACK_IMPORTED_MODULE_0__ = __nested_webpack_require_23065__(2);\n\r\nvar options = function (target, name) {\r\n    return (0,_util_index__WEBPACK_IMPORTED_MODULE_0__.isString)(name) && (0,_util_index__WEBPACK_IMPORTED_MODULE_0__.isReserved)(name) ? 0 : null;\r\n};\r\nvar dataObserveOptions = {\r\n    set: {\r\n        before: options\r\n    },\r\n    get: {\r\n        before: options\r\n    },\r\n    deleteProperty: {\r\n        before: options\r\n    }\r\n};\r\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (dataObserveOptions);\r\n\n\n/***/ }),\n/* 6 */\n/***/ ((__unused_webpack_module, __webpack_exports__, __nested_webpack_require_23922__) => {\n\n__nested_webpack_require_23922__.r(__webpack_exports__);\n/* harmony export */ __nested_webpack_require_23922__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ initForceUpdate),\n/* harmony export */   \"renderWatcherCache\": () => (/* binding */ renderWatcherCache)\n/* harmony export */ });\n/* harmony import */ var _observable_Watcher__WEBPACK_IMPORTED_MODULE_0__ = __nested_webpack_require_23922__(7);\n/* harmony import */ var _VNode_render__WEBPACK_IMPORTED_MODULE_1__ = __nested_webpack_require_23922__(10);\n\r\n\r\n/**渲染函数的 Watcher 缓存 */\r\nvar renderWatcherCache = new WeakMap();\r\nfunction initForceUpdate(target, targetProxy) {\r\n    // let target = Observe.observeProxyMap.get(targetProxy).target;\r\n    /**当前实例的渲染方法 */\r\n    var userRender = target.render;\r\n    var renderWatcher = new _observable_Watcher__WEBPACK_IMPORTED_MODULE_0__[\"default\"](targetProxy, function () {\r\n        if (userRender) {\r\n            (0,_VNode_render__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(target, userRender);\r\n        }\r\n    }, false, function () {\r\n        if (target.$mounted) {\r\n            targetProxy.componentWillUpdate();\r\n        }\r\n    });\r\n    //缓存当前实例渲染方法的Watcher\r\n    renderWatcherCache.set(targetProxy, renderWatcher);\r\n    //返回收集依赖方法\r\n    // target.$watch = renderWatcher;\r\n    // 将$forceUpdate放到 原型方法上\r\n    target.$forceUpdate = renderWatcher;\r\n}\r\n\n\n/***/ }),\n/* 7 */\n/***/ ((__unused_webpack_module, __webpack_exports__, __nested_webpack_require_25346__) => {\n\n__nested_webpack_require_25346__.r(__webpack_exports__);\n/* harmony export */ __nested_webpack_require_25346__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _Observe__WEBPACK_IMPORTED_MODULE_0__ = __nested_webpack_require_25346__(3);\n/* harmony import */ var _Scheduler__WEBPACK_IMPORTED_MODULE_1__ = __nested_webpack_require_25346__(8);\n/* harmony import */ var _shared_util_index__WEBPACK_IMPORTED_MODULE_2__ = __nested_webpack_require_25346__(2);\n\r\n\r\n\r\nvar Watcher = /** @class */ (function () {\r\n    /**\r\n     * 构造Watcher对象\r\n     * @param fn 需要收集依赖的方法\r\n     */\r\n    function Watcher(targetProxy, fn, isComputed, before) {\r\n        if (isComputed === void 0) { isComputed = false; }\r\n        this.isComputed = isComputed;\r\n        this.isInit = false;\r\n        /**针对计算属性生效,计算属性值发生变化后,下次访问应重新获取值 */\r\n        this.shouldUpdate = false;\r\n        //当前构件的观察实例\r\n        this.targetProxy = targetProxy;\r\n        //当前Watcher的id\r\n        this.id = (0,_shared_util_index__WEBPACK_IMPORTED_MODULE_2__.uid)();\r\n        //当前watcher在运行时收集的依赖合集\r\n        this.deps = new Set();\r\n        //需要收集依赖的方法\r\n        this.fn = fn;\r\n        //执行watch方法前执行的回调函数\r\n        this.before = before;\r\n    }\r\n    /**\r\n     * 重新收集依赖\r\n     */\r\n    Watcher.prototype.getValue = function () {\r\n        var _this = this;\r\n        //清空依赖 上次收集到的依赖\r\n        this.clean();\r\n        //标记初始化\r\n        this.isInit = true;\r\n        if (this.isComputed)\r\n            this.shouldUpdate = false;\r\n        //重新调用watch传入的方法,收集依赖\r\n        var result;\r\n        _Observe__WEBPACK_IMPORTED_MODULE_0__.ToggleCollection.toggle(this, function () {\r\n            //方法执行的过程中, 触发相应对象的 getter 进而将依赖存储进deps\r\n            result = _this.fn();\r\n        });\r\n        return result;\r\n    };\r\n    /**\r\n     * 依赖重新收集\r\n     */\r\n    Watcher.prototype.update = function () {\r\n        if (this.isComputed) {\r\n            this.shouldUpdate = true;\r\n        }\r\n        (0,_Scheduler__WEBPACK_IMPORTED_MODULE_1__.queueUpdate)(this);\r\n    };\r\n    /**\r\n     * 当前对象 key 添加订阅信息\r\n     * @param subs 当前观察者子集对象的 watcher 集合\r\n     * @param name 当前访问对象的key\r\n     */\r\n    Watcher.prototype.add = function (subs, name) {\r\n        var sub = subs[name] || (subs[name] = new Set());\r\n        //添加当前 watcher 到 sub 中\r\n        //当前值被改变时,调用到 update 方法进入更新队列\r\n        sub.add(this);\r\n        //添加 sub 的信息到当前 watcher 中\r\n        //当依赖方法被重新调用, 会移除订阅的依赖\r\n        this.deps.add(sub);\r\n    };\r\n    /**\r\n     * 清理收集的依赖\r\n     */\r\n    Watcher.prototype.clean = function () {\r\n        for (var _i = 0, _a = Array.from(this.deps); _i < _a.length; _i++) {\r\n            var watch = _a[_i];\r\n            watch.delete(this);\r\n        }\r\n        this.deps.clear();\r\n    };\r\n    return Watcher;\r\n}());\r\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Watcher);\r\n\n\n/***/ }),\n/* 8 */\n/***/ ((__unused_webpack_module, __webpack_exports__, __nested_webpack_require_28245__) => {\n\n__nested_webpack_require_28245__.r(__webpack_exports__);\n/* harmony export */ __nested_webpack_require_28245__.d(__webpack_exports__, {\n/* harmony export */   \"index\": () => (/* binding */ index),\n/* harmony export */   \"queue\": () => (/* binding */ queue),\n/* harmony export */   \"queueMap\": () => (/* binding */ queueMap),\n/* harmony export */   \"queueUpdate\": () => (/* binding */ queueUpdate)\n/* harmony export */ });\n/* harmony import */ var _util_nextTick__WEBPACK_IMPORTED_MODULE_0__ = __nested_webpack_require_28245__(9);\n/**\r\n * watcher 任务指定调度器\r\n */\r\n\r\n/**异步更新队列 */\r\nvar queue = [];\r\n/**判断一个异步更新队列正在等待执行或正在执行 */\r\nvar queueMap = new Map();\r\n/**是否已经有一个队列正在等待执行或正在执行了 */\r\nvar waiting = false;\r\n/**是否已经有一个队列正在执行 */\r\nvar flushing = false;\r\n/**当前正在执行的位置 */\r\nvar index = 0;\r\nfunction queueUpdate(watcher) {\r\n    if (!queueMap.has(watcher)) {\r\n        queueMap.set(watcher, true);\r\n        //当当前异步更新队列还未启动\r\n        if (!flushing) {\r\n            queue.push(watcher);\r\n        }\r\n        else {\r\n            //当前异步更新队列已经启动\r\n            //将渲染watcher放在后面执行  将watcher插入队列\r\n            var i = queue.length - 1;\r\n            while (i > index) {\r\n                if (queue[i].targetProxy.$info.uid === watcher.targetProxy.$info.uid && queue[i].isComputed !== watcher.isComputed) {\r\n                    if (queue[i].isComputed)\r\n                        break;\r\n                    else\r\n                        i--;\r\n                }\r\n                else if (+queue[i].id > +watcher.id) {\r\n                    i--;\r\n                }\r\n                else {\r\n                    break;\r\n                }\r\n            }\r\n            queue.splice(i + 1, 0, watcher);\r\n            // console.log(queue.slice(0, queue.length))\r\n            // console.log(queue.map(item => item.targetProxy.$info.uid))\r\n        }\r\n        if (!waiting) {\r\n            waiting = true;\r\n            (0,_util_nextTick__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(flushSchedukerQueue);\r\n        }\r\n    }\r\n}\r\n/**\r\n * 执行异步更新队列\r\n */\r\nfunction flushSchedukerQueue() {\r\n    flushing = true;\r\n    index = 0;\r\n    queue.sort(sortOrder);\r\n    for (var watcher = void 0; index < queue.length; index++) {\r\n        watcher = queue[index];\r\n        if (watcher.before) {\r\n            watcher.before();\r\n        }\r\n        //执行更新\r\n        watcher.getValue();\r\n    }\r\n    for (var i = queue.length - 1; i >= 0; i--) {\r\n        var watcher = queue[i];\r\n        var targetProxy = watcher.targetProxy;\r\n        if (targetProxy.$forceUpdate === watcher && targetProxy.$mounted) {\r\n            targetProxy.componentUpdated();\r\n        }\r\n    }\r\n    //当前异步更新队列已经执行完毕\r\n    waiting = flushing = false;\r\n    index = queue.length = 0;\r\n    queueMap.clear();\r\n}\r\nfunction sortOrder(watchA, watchB) {\r\n    if (watchA.targetProxy.$info.uid === watchB.targetProxy.$info.uid && watchA.isComputed !== watchB.isComputed) {\r\n        return watchA.isComputed ? -1 : 1;\r\n    }\r\n    return +watchA.id - +watchB.id;\r\n}\r\n\n\n/***/ }),\n/* 9 */\n/***/ ((__unused_webpack_module, __webpack_exports__, __nested_webpack_require_31258__) => {\n\n__nested_webpack_require_31258__.r(__webpack_exports__);\n/* harmony export */ __nested_webpack_require_31258__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ nextTick)\n/* harmony export */ });\nvar callbacks = [];\r\nvar pending = false;\r\nfunction flushCallbacks() {\r\n    pending = false;\r\n    var copies = callbacks.slice(0);\r\n    callbacks.length = 0;\r\n    for (var i = 0; i < copies.length; i++) {\r\n        copies[i]();\r\n    }\r\n}\r\nvar timeFunc;\r\nif (typeof Promise !== 'undefined' && isNative(Promise)) {\r\n    var p_1 = Promise.resolve();\r\n    timeFunc = function () {\r\n        p_1.then(flushCallbacks);\r\n    };\r\n}\r\nelse if (typeof MutationObserver !== 'undefined' && (isNative(MutationObserver) || MutationObserver.toString() === '[object MutationObserverConstructor]')) {\r\n    var counter_1 = 1;\r\n    var observer = new MutationObserver(flushCallbacks);\r\n    var textNode_1 = document.createTextNode(String(counter_1));\r\n    observer.observe(textNode_1, {\r\n        characterData: true\r\n    });\r\n    timeFunc = function () {\r\n        counter_1 = (counter_1 + 1) % 2;\r\n        textNode_1.data = String(counter_1);\r\n    };\r\n}\r\nelse if (typeof setImmediate !== 'undefined' && isNative(setImmediate)) {\r\n    timeFunc = function () {\r\n        setImmediate(flushCallbacks);\r\n    };\r\n}\r\nelse {\r\n    timeFunc = function () {\r\n        setTimeout(flushCallbacks, 0);\r\n    };\r\n}\r\nfunction nextTick(cb, ctx) {\r\n    var _resolve;\r\n    callbacks.push(function () {\r\n        if (cb) {\r\n            cb.call(ctx);\r\n        }\r\n        else if (_resolve) {\r\n            _resolve(ctx);\r\n        }\r\n    });\r\n    if (!pending) {\r\n        pending = true;\r\n        timeFunc();\r\n    }\r\n    if (!cb && typeof Promise !== 'undefined') {\r\n        return new Promise(function (resolve) {\r\n            _resolve = resolve;\r\n        });\r\n    }\r\n}\r\nfunction isNative(Ctor) {\r\n    return typeof Ctor === 'function' && /native code/.test(Ctor.toString());\r\n}\r\n\n\n/***/ }),\n/* 10 */\n/***/ ((__unused_webpack_module, __webpack_exports__, __nested_webpack_require_33293__) => {\n\n__nested_webpack_require_33293__.r(__webpack_exports__);\n/* harmony export */ __nested_webpack_require_33293__.d(__webpack_exports__, {\n/* harmony export */   \"ControlStack\": () => (/* binding */ ControlStack),\n/* harmony export */   \"curentControl\": () => (/* binding */ curentControl),\n/* harmony export */   \"default\": () => (/* binding */ render)\n/* harmony export */ });\n/* harmony import */ var _VNode_VNode__WEBPACK_IMPORTED_MODULE_0__ = __nested_webpack_require_33293__(11);\n/* harmony import */ var _Control__WEBPACK_IMPORTED_MODULE_1__ = __nested_webpack_require_33293__(1);\n/* harmony import */ var _shared_util_index__WEBPACK_IMPORTED_MODULE_2__ = __nested_webpack_require_33293__(2);\n/* harmony import */ var _VNode_util_catchCacheMth__WEBPACK_IMPORTED_MODULE_3__ = __nested_webpack_require_33293__(27);\n/* harmony import */ var _observable_Observe__WEBPACK_IMPORTED_MODULE_4__ = __nested_webpack_require_33293__(3);\n\r\n\r\n\r\n\r\n\r\n/**当前 HTMLElement 节点的Control队列 */\r\nvar ControlStack = [];\r\nvar curentControl = (0,_shared_util_index__WEBPACK_IMPORTED_MODULE_2__.create)(null);\r\nfunction basicRender(target, renderFunction) {\r\n    var targetProxy = _observable_Observe__WEBPACK_IMPORTED_MODULE_4__[\"default\"].observeMap.get(target).proxy;\r\n    (0,_VNode_util_catchCacheMth__WEBPACK_IMPORTED_MODULE_3__.execWillMountMth)(targetProxy);\r\n    var oldVNode = target.$VNode;\r\n    //同步当前控件中的 $VNode 为render中返回的 VNode 内容\r\n    var newVNode = target.$VNode = renderFunction.call(targetProxy) || _VNode_VNode__WEBPACK_IMPORTED_MODULE_0__[\"default\"].create(null, \"\");\r\n    _VNode_VNode__WEBPACK_IMPORTED_MODULE_0__[\"default\"].sync(newVNode, oldVNode);\r\n    var result = newVNode.result;\r\n    //更新Control节点状态\r\n    target.elem = result instanceof _Control__WEBPACK_IMPORTED_MODULE_1__[\"default\"] ? result.elem : result;\r\n    (0,_VNode_util_catchCacheMth__WEBPACK_IMPORTED_MODULE_3__.execMountedMth)(targetProxy);\r\n}\r\nfunction render(target, renderFunction) {\r\n    // console.log('当前Control入栈', target.$info.uid)\r\n    ControlStack.push(target);\r\n    curentControl = target;\r\n    basicRender(target, renderFunction);\r\n    ControlStack.pop();\r\n    curentControl = ControlStack[ControlStack.length - 1];\r\n    // console.log('当前Control出栈', target.$info.uid)\r\n}\r\n\n\n/***/ }),\n/* 11 */\n/***/ ((__unused_webpack_module, __webpack_exports__, __nested_webpack_require_35554__) => {\n\n__nested_webpack_require_35554__.r(__webpack_exports__);\n/* harmony export */ __nested_webpack_require_35554__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _Control__WEBPACK_IMPORTED_MODULE_0__ = __nested_webpack_require_35554__(1);\n/* harmony import */ var _shared_util_index__WEBPACK_IMPORTED_MODULE_1__ = __nested_webpack_require_35554__(2);\n/* harmony import */ var _components_ux_dom_index__WEBPACK_IMPORTED_MODULE_2__ = __nested_webpack_require_35554__(12);\n/* harmony import */ var _html_const__WEBPACK_IMPORTED_MODULE_3__ = __nested_webpack_require_35554__(17);\n/* harmony import */ var _render__WEBPACK_IMPORTED_MODULE_4__ = __nested_webpack_require_35554__(10);\n/* harmony import */ var _util_modifyControlValue__WEBPACK_IMPORTED_MODULE_5__ = __nested_webpack_require_35554__(26);\n/* harmony import */ var _html_directiveBase_attribute__WEBPACK_IMPORTED_MODULE_6__ = __nested_webpack_require_35554__(23);\n/* harmony import */ var _util_catchCacheMth__WEBPACK_IMPORTED_MODULE_7__ = __nested_webpack_require_35554__(27);\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n/**\r\n * 虚拟节点\r\n */\r\nvar VNode = /** @class */ (function () {\r\n    /**\r\n     * type节点类型\r\n     * 1.如果是null则表示文本节点;\r\n     * 2.如果是字符串则表示 HTML 原生节点;\r\n     * 3.如果是函数则表示控件\r\n     */\r\n    function VNode(type, props, children) {\r\n        this.type = type;\r\n        this.props = props;\r\n        this.children = children;\r\n        /**当前VNode存储的指令对象 */\r\n        this.propDirectives = new Map();\r\n        this.type = type;\r\n        this.props = props;\r\n        this.children = children;\r\n    }\r\n    /**\r\n     * 添加一个或多个子节点\r\n     * @param child 要添加的字内容\r\n     * @returns 返回 child\r\n     */\r\n    VNode.prototype.append = function (child) {\r\n        if (child != null) {\r\n            if (Array.isArray(child)) {\r\n                for (var _i = 0, child_1 = child; _i < child_1.length; _i++) {\r\n                    var item = child_1[_i];\r\n                    this.append(item);\r\n                }\r\n            }\r\n            else {\r\n                this.children.push(child instanceof VNode ? child : new VNode(null, child, _shared_util_index__WEBPACK_IMPORTED_MODULE_1__.emptyArray));\r\n            }\r\n        }\r\n        return child;\r\n    };\r\n    /**\r\n     * 创建一个虚拟节点\r\n     * TSX/JSX 中编译过程中通过此方法先将节点转换成 VNode\r\n     * @param type 虚拟节点类型, 如果是null则表示文本节点;如果是字符串则表示HTML原生节点; 如果是函数表示控件\r\n     * @param props 节点属性\r\n     * @param childNodes 所有子内容\r\n     * @returns 返回创建的虚拟节点\r\n     */\r\n    VNode.create = function (type, props) {\r\n        var childNodes = [];\r\n        for (var _i = 2; _i < arguments.length; _i++) {\r\n            childNodes[_i - 2] = arguments[_i];\r\n        }\r\n        var result = new VNode(type, props, []);\r\n        result.append(childNodes);\r\n        return result;\r\n    };\r\n    /**比较两个节点是否相同 */\r\n    VNode.isDiffVNode = function (newVNode, oldVNode) {\r\n        return !oldVNode || newVNode.type !== oldVNode.type ||\r\n            newVNode.type && newVNode.props && oldVNode.props && newVNode.props.id && oldVNode.props.id && newVNode.props.id !== oldVNode.props.id;\r\n    };\r\n    /**\r\n     * 更新子节点\r\n     * @param parentElm 父节点\r\n     * @param newCh 当前更新的子节点\r\n     * @param oldCh 当前更新子节点的原子节点\r\n     */\r\n    VNode.updateChildren = function (parentElm, newCh, oldCh) {\r\n        var oldStartIdx = 0, newStartIdx = 0;\r\n        var oldEndIdx = oldCh.length - 1, newEndIdx = newCh.length - 1;\r\n        var oldStartVNode = oldCh[0], newStartVNode = newCh[0];\r\n        var oldEndVNode = oldCh[oldEndIdx], newEndVNode = newCh[newEndIdx];\r\n        while (oldStartIdx <= oldEndIdx && newStartIdx <= newEndIdx) {\r\n            if (!this.isDiffVNode(oldStartVNode, newStartVNode)) {\r\n                this.sync(newStartVNode, oldStartVNode, false);\r\n                oldStartVNode = oldCh[++oldStartIdx];\r\n                newStartVNode = newCh[++newStartIdx];\r\n            }\r\n            else if (!this.isDiffVNode(oldEndVNode, newEndVNode)) {\r\n                this.sync(newEndVNode, oldEndVNode, false);\r\n                oldEndVNode = oldCh[--oldEndIdx];\r\n                newEndVNode = newCh[--newEndIdx];\r\n            }\r\n            else if (!this.isDiffVNode(oldStartVNode, newEndVNode)) {\r\n                this.sync(newEndVNode, oldStartVNode, false);\r\n                parentElm.insertBefore(oldStartVNode.result instanceof _Control__WEBPACK_IMPORTED_MODULE_0__[\"default\"] ? oldStartVNode.result.elem : oldStartVNode.result, (oldEndVNode.result instanceof _Control__WEBPACK_IMPORTED_MODULE_0__[\"default\"] ? oldEndVNode.result.elem : oldEndVNode.result).nextSibling);\r\n                oldStartVNode = oldCh[++oldStartIdx];\r\n                newEndVNode = newCh[--newEndIdx];\r\n            }\r\n            else if (!this.isDiffVNode(oldEndVNode, newStartVNode)) {\r\n                this.sync(newStartVNode, oldEndVNode, false);\r\n                parentElm.insertBefore(oldEndVNode.result instanceof _Control__WEBPACK_IMPORTED_MODULE_0__[\"default\"] ? oldEndVNode.result.elem : oldEndVNode.result, oldStartVNode.result instanceof _Control__WEBPACK_IMPORTED_MODULE_0__[\"default\"] ? oldStartVNode.result.elem : oldStartVNode.result);\r\n                oldEndVNode = oldCh[--oldEndIdx];\r\n                newStartVNode = newCh[++newStartIdx];\r\n            }\r\n            else {\r\n                this.sync(newStartVNode);\r\n                if (newStartVNode.result instanceof _Control__WEBPACK_IMPORTED_MODULE_0__[\"default\"]) {\r\n                    newStartVNode.result.$renderTo(parentElm, oldStartVNode.result);\r\n                }\r\n                else {\r\n                    parentElm.insertBefore(newStartVNode.result, oldStartVNode.result instanceof _Control__WEBPACK_IMPORTED_MODULE_0__[\"default\"] ? oldStartVNode.result.elem : oldStartVNode.result);\r\n                }\r\n                newStartVNode = newCh[++newStartIdx];\r\n            }\r\n        }\r\n        if (oldStartIdx > oldEndIdx) {\r\n            var refElm = !!newCh[newEndIdx + 1] ? newCh[newEndIdx + 1].result : null;\r\n            this.addVNode(parentElm, newCh, newStartIdx, newEndIdx, refElm);\r\n        }\r\n        else if (newStartIdx > newEndIdx) {\r\n            this.removeVNode(parentElm, oldCh, oldStartIdx, oldEndIdx);\r\n        }\r\n    };\r\n    /**\r\n     * 移除虚拟节点，从真实dom中移除当前虚拟节点\r\n     * @param body\r\n     * @param VNodes\r\n     * @param start\r\n     * @param end\r\n     */\r\n    VNode.removeVNode = function (body, VNodes, start, end) {\r\n        end = end === undefined ? VNodes.length : end;\r\n        for (; start <= end; start++) {\r\n            var childResult = VNodes[start].result;\r\n            if (childResult instanceof _Control__WEBPACK_IMPORTED_MODULE_0__[\"default\"]) {\r\n                childResult.$renderTo(null);\r\n            }\r\n            else {\r\n                body.removeChild(childResult);\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * 新增虚拟节点, 将虚拟节点添加到真实dom中\r\n     * @param body\r\n     * @param VNodes\r\n     * @param start\r\n     * @param end\r\n     */\r\n    VNode.addVNode = function (body, VNodes, start, end, refChild) {\r\n        end = end === undefined ? VNodes.length : end;\r\n        for (; start <= end; start++) {\r\n            if (!VNodes[start].result) {\r\n                this.sync(VNodes[start]);\r\n            }\r\n            var result = VNodes[start].result;\r\n            if (result instanceof _Control__WEBPACK_IMPORTED_MODULE_0__[\"default\"]) {\r\n                result.$renderTo(body, refChild);\r\n            }\r\n            else {\r\n                if (refChild) {\r\n                    body.insertBefore(result, refChild);\r\n                }\r\n                else {\r\n                    body.appendChild(result);\r\n                }\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * 同步虚拟节点, 创建虚拟节点对应的真实节点\r\n     * @param newVNode 新虚拟节点\r\n     * @param oldVNode 如果指定了原虚拟节点,则同步时尽量重用上次创建的真实节点\r\n     * @param changed true强制更新节点, false强制使用原节点\r\n     * @return 如果根节点发生改变则返回 true, 否则返回 false\r\n     */\r\n    VNode.sync = function (newVNode, oldVNode, changed) {\r\n        //1.同步根节点\r\n        //如果节点类型和ID不变,则重用上次生成的节点,否则重新生成\r\n        var type = newVNode.type;\r\n        changed = changed === undefined ? this.isDiffVNode(newVNode, oldVNode) : changed;\r\n        var isControl = typeof type === \"function\";\r\n        //实例化节点 / 生成dom节点   change true 创建新节点， false 使用原始旧节点\r\n        var result = newVNode.result = changed ? type ? isControl ? new type() : document.createElement(type) : document.createTextNode(newVNode.props) : oldVNode.result;\r\n        if (!changed) {\r\n            newVNode.propDirectives = oldVNode.propDirectives;\r\n        }\r\n        if (type) {\r\n            //2.同步属性\r\n            //TODO 应该将model的绑定放在最后执行,因为他需要访问设置了的props\r\n            var body = void 0;\r\n            if (isControl) {\r\n                if (!changed) {\r\n                    for (var prop in oldVNode.props) {\r\n                        if ((!newVNode.props || !(prop in newVNode.props)) && prop !== \"control\") {\r\n                            newVNode.propDirectives.has(prop) && newVNode.propDirectives.get(prop).destory();\r\n                            newVNode.propDirectives.has(prop) && newVNode.propDirectives.delete(prop);\r\n                        }\r\n                    }\r\n                }\r\n                for (var prop in newVNode.props) {\r\n                    var value = newVNode.props[prop];\r\n                    if ((changed || !oldVNode.props || value !== oldVNode.props[prop]) || prop === \"model\") {\r\n                        if (newVNode.propDirectives.has(prop)) {\r\n                            newVNode.propDirectives.get(prop).commit(value);\r\n                        }\r\n                        else {\r\n                            var propDirective = void 0;\r\n                            if (VNode.isDirective(prop)) {\r\n                                var directive = (0,_shared_util_index__WEBPACK_IMPORTED_MODULE_1__.has)(_html_const__WEBPACK_IMPORTED_MODULE_3__.directives, prop) ? _html_const__WEBPACK_IMPORTED_MODULE_3__.directives[prop] : _html_const__WEBPACK_IMPORTED_MODULE_3__.userDirectives[prop];\r\n                                propDirective = new directive(result, value, _render__WEBPACK_IMPORTED_MODULE_4__.curentControl);\r\n                            }\r\n                            else {\r\n                                propDirective = new _html_directiveBase_attribute__WEBPACK_IMPORTED_MODULE_6__[\"default\"](prop, value, result);\r\n                            }\r\n                            newVNode.propDirectives.set(prop, propDirective);\r\n                        }\r\n                    }\r\n                }\r\n                //更新控件$parent,$children信息\r\n                (0,_util_modifyControlValue__WEBPACK_IMPORTED_MODULE_5__.setControlValue)(result, \"$parent\", _render__WEBPACK_IMPORTED_MODULE_4__.curentControl);\r\n                if ((newVNode.children.length || !changed && oldVNode.children.length)) {\r\n                    (0,_util_modifyControlValue__WEBPACK_IMPORTED_MODULE_5__.setControlValue)(result, \"$children\", newVNode.children.slice(0, newVNode.children.length));\r\n                }\r\n                if (!result.$mounted) {\r\n                    (0,_util_catchCacheMth__WEBPACK_IMPORTED_MODULE_7__.addCacheMth)(result);\r\n                }\r\n                body = result.body;\r\n                //防止Control判断未改变,导致节点整体未发生变化的情况\r\n                !body && oldVNode && oldVNode.result && oldVNode.result.$mounted && (body = oldVNode.result.elem);\r\n            }\r\n            else {\r\n                //HTMLElement / Text    设置节点Attribute\r\n                for (var prop in newVNode.props) {\r\n                    var value = newVNode.props[prop];\r\n                    if (changed || !oldVNode.props || !(0,_shared_util_index__WEBPACK_IMPORTED_MODULE_1__.isFunction)(value) && value !== oldVNode.props[prop] || VNode.isDirective(prop)) {\r\n                        if (oldVNode && oldVNode.propDirectives.has(prop)) {\r\n                            newVNode.propDirectives.set(prop, oldVNode.propDirectives);\r\n                        }\r\n                        VNode.set(newVNode, result, prop, value);\r\n                    }\r\n                }\r\n                if (!changed) {\r\n                    //复用oldDom, 如果此时old prop发生变化\r\n                    for (var prop in oldVNode.props) {\r\n                        if (!newVNode.props || !(prop in newVNode.props)) {\r\n                            VNode.set(newVNode, result, prop, null);\r\n                        }\r\n                    }\r\n                }\r\n                body = result;\r\n            }\r\n            //3. 同步子节点\r\n            if (body) {\r\n                if (newVNode.children.length) {\r\n                    if (oldVNode && oldVNode.children.length) {\r\n                        this.updateChildren(body, newVNode.children, oldVNode.children);\r\n                    }\r\n                    else {\r\n                        this.addVNode(body, newVNode.children, 0, newVNode.children.length - 1);\r\n                    }\r\n                }\r\n                else {\r\n                    if (oldVNode && oldVNode.children.length) {\r\n                        this.removeVNode(body, oldVNode.children, 0, oldVNode.children.length - 1);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        else if (!changed && oldVNode.props !== newVNode.props) {\r\n            //2.文本节点同步属性\r\n            result.textContent = newVNode.props;\r\n        }\r\n        return changed;\r\n    };\r\n    /**\r\n     * 设置节点的属性\r\n     * @param target 要设置的节点\r\n     * @param prop 属性名\r\n     * @param value 属性值\r\n     * @param args 部分属性需要附加参数  内置class,style, 监听事件的 selector等需要附加参数\r\n     * @param scope 时间作用域\r\n     */\r\n    VNode.set = function (vnode, target, prop, value, args) {\r\n        if (value === void 0) { value = null; }\r\n        if (/^on[^a-z]/.test(prop)) { //监听事件\r\n            var eventName = prop.slice(2).toLowerCase();\r\n            _components_ux_dom_index__WEBPACK_IMPORTED_MODULE_2__.on(target, eventName, args || \"\", value, _render__WEBPACK_IMPORTED_MODULE_4__.curentControl);\r\n        }\r\n        else if (VNode.isDirective(prop)) { //自定义标签\r\n            if (value) {\r\n                if (!vnode.propDirectives.has(prop)) {\r\n                    var directive = (0,_shared_util_index__WEBPACK_IMPORTED_MODULE_1__.has)(_html_const__WEBPACK_IMPORTED_MODULE_3__.directives, prop) ? _html_const__WEBPACK_IMPORTED_MODULE_3__.directives[prop] : _html_const__WEBPACK_IMPORTED_MODULE_3__.userDirectives[prop];\r\n                    var propDirective = new directive(target, value, _render__WEBPACK_IMPORTED_MODULE_4__.curentControl);\r\n                    vnode.propDirectives.set(prop, propDirective);\r\n                }\r\n            }\r\n            else {\r\n                //移除自定义指令对象\r\n                vnode.propDirectives[prop] && vnode.propDirectives[prop].destory();\r\n            }\r\n        }\r\n        else { //其余属性\r\n            _components_ux_dom_index__WEBPACK_IMPORTED_MODULE_2__.setAttr(target, prop, value);\r\n        }\r\n    };\r\n    /**\r\n     * 检测当前属性是否是指令\r\n     * @param prop\r\n     * @returns\r\n     */\r\n    VNode.isDirective = function (prop) {\r\n        return (0,_shared_util_index__WEBPACK_IMPORTED_MODULE_1__.has)(_html_const__WEBPACK_IMPORTED_MODULE_3__.directives, prop) || (0,_shared_util_index__WEBPACK_IMPORTED_MODULE_1__.has)(_html_const__WEBPACK_IMPORTED_MODULE_3__.userDirectives, prop);\r\n    };\r\n    VNode.copyVNode = function (target) {\r\n        var type = target.type, props = target.props, children = target.children;\r\n        return VNode.create(type, props, children);\r\n    };\r\n    return VNode;\r\n}());\r\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (VNode);\r\n\n\n/***/ }),\n/* 12 */\n/***/ ((__unused_webpack_module, __webpack_exports__, __nested_webpack_require_51056__) => {\n\n__nested_webpack_require_51056__.r(__webpack_exports__);\n/* harmony export */ __nested_webpack_require_51056__.d(__webpack_exports__, {\n/* harmony export */   \"Point\": () => (/* reexport safe */ _Rect__WEBPACK_IMPORTED_MODULE_0__.Point),\n/* harmony export */   \"Rect\": () => (/* reexport safe */ _Rect__WEBPACK_IMPORTED_MODULE_0__.Rect),\n/* harmony export */   \"addClass\": () => (/* reexport safe */ _dom__WEBPACK_IMPORTED_MODULE_2__.addClass),\n/* harmony export */   \"after\": () => (/* reexport safe */ _dom__WEBPACK_IMPORTED_MODULE_2__.after),\n/* harmony export */   \"animate\": () => (/* reexport safe */ _animation__WEBPACK_IMPORTED_MODULE_1__.animate),\n/* harmony export */   \"animateFix\": () => (/* reexport safe */ _animation__WEBPACK_IMPORTED_MODULE_1__.animateFix),\n/* harmony export */   \"append\": () => (/* reexport safe */ _dom__WEBPACK_IMPORTED_MODULE_2__.append),\n/* harmony export */   \"before\": () => (/* reexport safe */ _dom__WEBPACK_IMPORTED_MODULE_2__.before),\n/* harmony export */   \"children\": () => (/* reexport safe */ _dom__WEBPACK_IMPORTED_MODULE_2__.children),\n/* harmony export */   \"colsest\": () => (/* reexport safe */ _dom__WEBPACK_IMPORTED_MODULE_2__.colsest),\n/* harmony export */   \"computeStyle\": () => (/* reexport safe */ _dom__WEBPACK_IMPORTED_MODULE_2__.computeStyle),\n/* harmony export */   \"contains\": () => (/* reexport safe */ _dom__WEBPACK_IMPORTED_MODULE_2__.contains),\n/* harmony export */   \"find\": () => (/* reexport safe */ _dom__WEBPACK_IMPORTED_MODULE_2__.find),\n/* harmony export */   \"first\": () => (/* reexport safe */ _dom__WEBPACK_IMPORTED_MODULE_2__.first),\n/* harmony export */   \"getAttr\": () => (/* reexport safe */ _dom__WEBPACK_IMPORTED_MODULE_2__.getAttr),\n/* harmony export */   \"getHtml\": () => (/* reexport safe */ _dom__WEBPACK_IMPORTED_MODULE_2__.getHtml),\n/* harmony export */   \"getOffset\": () => (/* reexport safe */ _dom__WEBPACK_IMPORTED_MODULE_2__.getOffset),\n/* harmony export */   \"getRect\": () => (/* reexport safe */ _dom__WEBPACK_IMPORTED_MODULE_2__.getRect),\n/* harmony export */   \"getScroll\": () => (/* reexport safe */ _dom__WEBPACK_IMPORTED_MODULE_2__.getScroll),\n/* harmony export */   \"getStyle\": () => (/* reexport safe */ _dom__WEBPACK_IMPORTED_MODULE_2__.getStyle),\n/* harmony export */   \"hasClass\": () => (/* reexport safe */ _dom__WEBPACK_IMPORTED_MODULE_2__.hasClass),\n/* harmony export */   \"hide\": () => (/* reexport safe */ _animation__WEBPACK_IMPORTED_MODULE_1__.hide),\n/* harmony export */   \"index\": () => (/* reexport safe */ _dom__WEBPACK_IMPORTED_MODULE_2__.index),\n/* harmony export */   \"isHidden\": () => (/* reexport safe */ _animation__WEBPACK_IMPORTED_MODULE_1__.isHidden),\n/* harmony export */   \"last\": () => (/* reexport safe */ _dom__WEBPACK_IMPORTED_MODULE_2__.last),\n/* harmony export */   \"match\": () => (/* reexport safe */ _dom__WEBPACK_IMPORTED_MODULE_2__.match),\n/* harmony export */   \"next\": () => (/* reexport safe */ _dom__WEBPACK_IMPORTED_MODULE_2__.next),\n/* harmony export */   \"off\": () => (/* reexport safe */ _dom__WEBPACK_IMPORTED_MODULE_2__.off),\n/* harmony export */   \"offsetParent\": () => (/* reexport safe */ _dom__WEBPACK_IMPORTED_MODULE_2__.offsetParent),\n/* harmony export */   \"on\": () => (/* reexport safe */ _dom__WEBPACK_IMPORTED_MODULE_2__.on),\n/* harmony export */   \"once\": () => (/* reexport safe */ _dom__WEBPACK_IMPORTED_MODULE_2__.once),\n/* harmony export */   \"parent\": () => (/* reexport safe */ _dom__WEBPACK_IMPORTED_MODULE_2__.parent),\n/* harmony export */   \"parse\": () => (/* reexport safe */ _dom__WEBPACK_IMPORTED_MODULE_2__.parse),\n/* harmony export */   \"prepend\": () => (/* reexport safe */ _dom__WEBPACK_IMPORTED_MODULE_2__.prepend),\n/* harmony export */   \"prev\": () => (/* reexport safe */ _dom__WEBPACK_IMPORTED_MODULE_2__.prev),\n/* harmony export */   \"query\": () => (/* reexport safe */ _dom__WEBPACK_IMPORTED_MODULE_2__.query),\n/* harmony export */   \"ready\": () => (/* reexport safe */ _dom__WEBPACK_IMPORTED_MODULE_2__.ready),\n/* harmony export */   \"removeClass\": () => (/* reexport safe */ _dom__WEBPACK_IMPORTED_MODULE_2__.removeClass),\n/* harmony export */   \"setAttr\": () => (/* reexport safe */ _dom__WEBPACK_IMPORTED_MODULE_2__.setAttr),\n/* harmony export */   \"setHtml\": () => (/* reexport safe */ _dom__WEBPACK_IMPORTED_MODULE_2__.setHtml),\n/* harmony export */   \"setOffset\": () => (/* reexport safe */ _dom__WEBPACK_IMPORTED_MODULE_2__.setOffset),\n/* harmony export */   \"setRect\": () => (/* reexport safe */ _dom__WEBPACK_IMPORTED_MODULE_2__.setRect),\n/* harmony export */   \"setScroll\": () => (/* reexport safe */ _dom__WEBPACK_IMPORTED_MODULE_2__.setScroll),\n/* harmony export */   \"setStyle\": () => (/* reexport safe */ _dom__WEBPACK_IMPORTED_MODULE_2__.setStyle),\n/* harmony export */   \"show\": () => (/* reexport safe */ _animation__WEBPACK_IMPORTED_MODULE_1__.show),\n/* harmony export */   \"toggle\": () => (/* reexport safe */ _animation__WEBPACK_IMPORTED_MODULE_1__.toggle),\n/* harmony export */   \"toggleClass\": () => (/* reexport safe */ _dom__WEBPACK_IMPORTED_MODULE_2__.toggleClass),\n/* harmony export */   \"trigger\": () => (/* reexport safe */ _dom__WEBPACK_IMPORTED_MODULE_2__.trigger),\n/* harmony export */   \"vendor\": () => (/* reexport safe */ _dom__WEBPACK_IMPORTED_MODULE_2__.vendor)\n/* harmony export */ });\n/* harmony import */ var _Rect__WEBPACK_IMPORTED_MODULE_0__ = __nested_webpack_require_51056__(13);\n/* harmony import */ var _animation__WEBPACK_IMPORTED_MODULE_1__ = __nested_webpack_require_51056__(14);\n/* harmony import */ var _dom__WEBPACK_IMPORTED_MODULE_2__ = __nested_webpack_require_51056__(15);\n/* harmony import */ var _DisableScroll__WEBPACK_IMPORTED_MODULE_3__ = __nested_webpack_require_51056__(16);\n\r\n\r\n\r\n\r\n\n\n/***/ }),\n/* 13 */\n/***/ ((__unused_webpack_module, __webpack_exports__, __nested_webpack_require_56808__) => {\n\n__nested_webpack_require_56808__.r(__webpack_exports__);\n/* harmony export */ __nested_webpack_require_56808__.d(__webpack_exports__, {\n/* harmony export */   \"Point\": () => (/* binding */ Point),\n/* harmony export */   \"Rect\": () => (/* binding */ Rect)\n/* harmony export */ });\n/**\r\n * 表示一个坐标\r\n */\r\nvar Point = /** @class */ (function () {\r\n    function Point(x, y) {\r\n        this.x = x;\r\n        this.y = y;\r\n    }\r\n    Point.isIPoint = function (obj) {\r\n        return !!obj && ('x' in obj) && ('y' in obj);\r\n    };\r\n    Point.copy = function (p) {\r\n        return new Point(0, 0).set(p);\r\n    };\r\n    /**\r\n     * 获取指定元素的滚动距离\r\n     * @param elem 要获取的元素或文档\r\n     * @returns 返回作表, 如果元素不可滚动则返回原点s\r\n     */\r\n    Point.getScroll = function (elem) {\r\n        if (elem.nodeType === 9) {\r\n            var win = elem.defaultView;\r\n            if (\"scrollX\" in win) {\r\n                return {\r\n                    x: win.scrollX,\r\n                    y: win.scrollY\r\n                };\r\n            }\r\n            elem = elem.documentElement;\r\n        }\r\n        return {\r\n            x: elem.scrollLeft,\r\n            y: elem.scrollTop\r\n        };\r\n    };\r\n    /**\r\n     * 设置指定元素的滚动距离\r\n     * @param elem 要设置的元素或文档\r\n     * @param value 要设置的坐标\r\n     */\r\n    Point.setScroll = function (elem, value) {\r\n        if (elem.nodeType === 9) {\r\n            var scrollToPoint = void 0;\r\n            if (value.x !== null)\r\n                scrollToPoint.left = value.x;\r\n            if (value.y !== null)\r\n                scrollToPoint.top = value.y;\r\n            elem.defaultView.scrollTo(scrollToPoint);\r\n        }\r\n        else {\r\n            if (value.x !== null)\r\n                elem.scrollLeft = value.x;\r\n            if (value.y !== null)\r\n                elem.scrollTop = value.y;\r\n        }\r\n    };\r\n    Point.prototype.add = function (p) {\r\n        this.x += p.x;\r\n        this.y += p.y;\r\n        return this;\r\n    };\r\n    Point.prototype.subtract = function (p) {\r\n        this.x -= p.x;\r\n        this.y -= p.y;\r\n        return this;\r\n    };\r\n    Point.prototype.reset = function () {\r\n        this.x = 0;\r\n        this.y = 0;\r\n        return this;\r\n    };\r\n    Point.prototype.set = function (p) {\r\n        this.x = p.x;\r\n        this.y = p.y;\r\n        return this;\r\n    };\r\n    return Point;\r\n}());\r\n\r\nvar Rect = /** @class */ (function () {\r\n    function Rect(x, y, width, height) {\r\n        this.x = x;\r\n        this.y = y;\r\n        this.width = width;\r\n        this.height = height;\r\n    }\r\n    Rect.getCurrent = function (elem) {\r\n        var doc = elem.nodeType === 9 ? elem : elem.ownerDocument;\r\n        var html = doc.documentElement;\r\n    };\r\n    return Rect;\r\n}());\r\n\r\n\n\n/***/ }),\n/* 14 */\n/***/ ((__unused_webpack_module, __webpack_exports__, __nested_webpack_require_59562__) => {\n\n__nested_webpack_require_59562__.r(__webpack_exports__);\n/* harmony export */ __nested_webpack_require_59562__.d(__webpack_exports__, {\n/* harmony export */   \"animate\": () => (/* binding */ animate),\n/* harmony export */   \"animateFix\": () => (/* binding */ animateFix),\n/* harmony export */   \"hide\": () => (/* binding */ hide),\n/* harmony export */   \"isHidden\": () => (/* binding */ isHidden),\n/* harmony export */   \"show\": () => (/* binding */ show),\n/* harmony export */   \"toggle\": () => (/* binding */ toggle)\n/* harmony export */ });\n/* harmony import */ var _dom__WEBPACK_IMPORTED_MODULE_0__ = __nested_webpack_require_59562__(15);\n/* harmony import */ var _DisableScroll__WEBPACK_IMPORTED_MODULE_1__ = __nested_webpack_require_59562__(16);\n\r\n\r\n/**\r\n * 动画相关的 DOM 操作\r\n */\r\nvar animateFix;\r\n/**\r\n * 执行一个自定义动画渐变\r\n * @param elem 要渐变的元素\r\n * @param propNames 要渐变的 CSS 属性名和最终的属性值组成的键值对\r\n * @param callback 执行渐变结束的回调函数\r\n * @param duration 渐变执行的总毫秒数\r\n * @param timingFunction 渐变函数, 可以可以使用CSS3预设的特效渐变函数\r\n * @example animate(element.body, { height: 400 })\r\n */\r\nfunction animate(elem, propNames, callback, duration, timingFunction) {\r\n    if (duration === void 0) { duration = 200; }\r\n    if (timingFunction === void 0) { timingFunction = \"ease\"; }\r\n    if (!animateFix) {\r\n        var transition = (0,_dom__WEBPACK_IMPORTED_MODULE_0__.vendor)(\"transition\");\r\n        animateFix = {\r\n            support: transition in document.documentElement.style,\r\n            transition: transition,\r\n            transitionEnd: (transition + \"End\").replace(transition.length > 10 ? /^[A-Z]/ : /[A-Z]/, function (w) { return w.toLowerCase(); })\r\n        };\r\n    }\r\n    if (animateFix.support && duration !== 0) {\r\n        var context_1 = elem.style.__animate__ || (elem.style.__animate__ = {});\r\n        //设置style属性中的 transition 属性 不添加delay属性\r\n        var setTransition_1 = function () {\r\n            var transition = \"\";\r\n            // 重组 transition 属性\r\n            for (var key in context_1) {\r\n                if (transition)\r\n                    transition += \",\";\r\n                //将驼峰样式\r\n                transition += \"\".concat(key.replace(/[A-Z]|^ms|^webkit/g, function (word) { return \"-\" + word.toLowerCase(); }), \" \").concat(duration, \"ms \").concat(timingFunction);\r\n            }\r\n            elem.style[animateFix.transition] = transition;\r\n        };\r\n        //transformend 触发的事件\r\n        var end_1 = function (e) {\r\n            //忽略冒泡导致的调用 e不存在则表示是timeout导致的调用\r\n            if (timer_1 && (!e || e.target === e.currentTarget)) {\r\n                clearTimeout(timer_1);\r\n                timer_1 = 0;\r\n                elem.removeEventListener(animateFix.transitionEnd, end_1, false);\r\n                var contextUpdated = false;\r\n                for (var key in context_1) {\r\n                    //如果当前渐变效果 结束的话, 将其在 context 中移除,并且在下次更新 transition 属性的时候,将其移除\r\n                    if (context_1[key] === end_1) {\r\n                        delete context_1[key];\r\n                        contextUpdated = true;\r\n                    }\r\n                }\r\n                if (contextUpdated) {\r\n                    setTransition_1();\r\n                    callback && callback.call(elem);\r\n                }\r\n            }\r\n        };\r\n        //将所有属性设置为初始值\r\n        //同此添加的 属性,拥有同一个end方法,因为方法传入的执行时间一致\r\n        for (var propName in propNames) {\r\n            propName = (0,_dom__WEBPACK_IMPORTED_MODULE_0__.vendor)(propName);\r\n            context_1[propName] = end_1;\r\n            if (!elem.style[propName]) {\r\n                elem.style[propName] = (0,_dom__WEBPACK_IMPORTED_MODULE_0__.getStyle)(elem, propName);\r\n            }\r\n        }\r\n        //设置要渐变的属性\r\n        setTransition_1();\r\n        //绑定事件完成事件\r\n        elem.addEventListener(animateFix.transitionEnd, end_1, false);\r\n        //当对象移除之后即不会触发transitionEnd事件,那么我们这里使用setTimeout保证最后稳定触发一次更新,移除transition属性\r\n        var timer_1 = setTimeout(end_1, duration);\r\n    }\r\n    else {\r\n        // 如果间隔事件是 0 的话,即表示不需要渐变效果,则直接将属性设置为最终值,并且执行回调函数即可\r\n        callback && setTimeout(function () { callback.call(elem); }, duration);\r\n    }\r\n    // 设置属性为最终值, 触发动画\r\n    for (var propName in propNames) {\r\n        (0,_dom__WEBPACK_IMPORTED_MODULE_0__.setStyle)(elem, propName, propNames[propName]);\r\n    }\r\n}\r\n/**\r\n * 存储默认的 dispaly 属性\r\n */\r\nvar defaultDisplays;\r\n/**\r\n * 存储默认显示动画\r\n */\r\nvar toggleAnimations;\r\n/**\r\n * 判断指定的元素是否被隐藏\r\n * @param elem 要判断的元素\r\n * @returns 如果元素被隐藏则返回 true, 否则返回false\r\n */\r\nfunction isHidden(elem) {\r\n    return elem.style.__toggle__ === false || (elem.style.display || (0,_dom__WEBPACK_IMPORTED_MODULE_0__.getStyle)(elem, \"display\")) === 'none';\r\n}\r\n/**\r\n * 显示指定元素\r\n * @param elem 要显示的元素\r\n * @param animation 显示时使用的动画\r\n * @param callback 动画执行完的回调函数\r\n * @param duration 动画执行的总毫秒数\r\n * @param timingFunction 渐变函数,支持 CSS3 中预设的渐变函数\r\n * @param target 动画的目标元素\r\n */\r\nfunction show(elem, animation, callback, duration, timingFunction) {\r\n    if (animation || callback) {\r\n        toggle(elem, true, animation, callback, duration, timingFunction, elem);\r\n    }\r\n    else {\r\n        elem.style.display = elem.__display__ || \"\";\r\n        if ((0,_dom__WEBPACK_IMPORTED_MODULE_0__.getStyle)(elem, \"display\") === \"none\") {\r\n            var nodeName = elem.nodeName;\r\n            var defaultDisplay = (defaultDisplays || (defaultDisplays = Object.create(null)))[nodeName];\r\n            if (!defaultDisplay) {\r\n                var tmp = document.createElement(nodeName);\r\n                document.body.append(tmp);\r\n                defaultDisplay = (0,_dom__WEBPACK_IMPORTED_MODULE_0__.getStyle)(tmp, \"display\");\r\n                document.removeChild(tmp);\r\n                //如果计算失败,则默认使用block\r\n                if (defaultDisplay === \"none\") {\r\n                    defaultDisplay = \"block\";\r\n                }\r\n                defaultDisplays[nodeName] = defaultDisplay;\r\n            }\r\n            elem.style.display = defaultDisplay;\r\n        }\r\n    }\r\n}\r\n/**\r\n * 隐藏指定元素\r\n * @param elem 要隐藏的元素\r\n * @param animation 隐藏时使用的动画\r\n * @param callback 动画执行完的回调函数\r\n * @param duration 动画执行的总毫秒数\r\n * @param timingFunction 渐变函数,支持 CSS3 中预设的渐变函数\r\n * @param target 动画的目标元素\r\n */\r\nfunction hide(elem, animation, callback, duration, timingFunction, target) {\r\n    if (animation || callback) {\r\n        toggle(elem, false, animation, callback, duration, timingFunction, target);\r\n    }\r\n    else {\r\n        var currentDispaly = (0,_dom__WEBPACK_IMPORTED_MODULE_0__.getStyle)(elem, \"display\");\r\n        if (currentDispaly !== \"none\") {\r\n            elem.style.__display__ = elem.style.display;\r\n            elem.style.display = \"none\";\r\n        }\r\n    }\r\n}\r\nfunction toggle(elem, value, animation, callback, duration, timingFunction, target) {\r\n    if (typeof value !== 'boolean') {\r\n        target = timingFunction;\r\n        timingFunction = duration;\r\n        duration = callback;\r\n        callback = animation;\r\n        animation = value;\r\n        value = undefined;\r\n    }\r\n    var hidden = isHidden(elem);\r\n    if (value === undefined) {\r\n        value = hidden;\r\n    }\r\n    if (typeof animation === 'string') {\r\n        if (!toggleAnimations) {\r\n            toggleAnimations = {\r\n                opacity: {\r\n                    opacity: 0\r\n                },\r\n                height: {\r\n                    marginTop: 0,\r\n                    borderTopWidth: 0,\r\n                    paddingTop: 0,\r\n                    height: 0,\r\n                    paddingBottom: 0,\r\n                    borderBottomWidth: 0,\r\n                    marginBottom: 0\r\n                },\r\n                width: {\r\n                    marginLeft: 0,\r\n                    borderLeftWidth: 0,\r\n                    paddingLeft: 0,\r\n                    width: 0,\r\n                    paddingRight: 0,\r\n                    borderReghtWidth: 0,\r\n                    marginRight: 0\r\n                },\r\n                top: { transform: \"translateY(-100%)\" },\r\n                bottom: { tarnsform: \"translateY(100%)\" },\r\n                left: { transform: \"translateX(-100%)\" },\r\n                right: { transform: \"translateX(100%)\" },\r\n                scale: { transform: \"scale(0, 0)\" },\r\n                scaleX: { transform: \"scaleX(0)\" },\r\n                scaleY: { transform: \"scaleY(0)\" },\r\n                slideDown: { opacity: 0, transform: \"translateY(10%)\" },\r\n                slideRight: { opacity: 0, transform: \"translateX(10%)\" },\r\n                slideUp: { opacity: 0, transform: \"translateY(-10%)\" },\r\n                slideLeft: { opacity: 0, transform: \"translateX(-10%)\" },\r\n                zoomIn: { opacity: 0, transform: \"scale(0, 0)\" },\r\n                zoomOut: { opacity: 0, transform: \"scale(1.2, 1.2)\" },\r\n                rotate: { opacity: 0, transform: \"rotate(180deg)\" }\r\n            };\r\n        }\r\n        animation = toggleAnimations[animation];\r\n    }\r\n    if (animation && duration !== 0) {\r\n        //优先显示元素,以便后续计算\r\n        if (value && hidden) {\r\n            show(elem);\r\n        }\r\n        //设置渐变目标\r\n        var setTransformOrigin_1 = target && animation.transform && elem.style.__toggle__ == undefined;\r\n        if (setTransformOrigin_1) {\r\n            var targetRect = (0,_dom__WEBPACK_IMPORTED_MODULE_0__.getRect)(target);\r\n            var elemRect = (0,_dom__WEBPACK_IMPORTED_MODULE_0__.getRect)(elem);\r\n            (0,_dom__WEBPACK_IMPORTED_MODULE_0__.setStyle)(elem, \"transformOrigin\", \"\".concat((elemRect.x + elemRect.width <= targetRect.x + targetRect.width / 4 ? targetRect.x : targetRect.x + targetRect.width <= elemRect.x + targetRect.width / 4 ? targetRect.x + targetRect.width : targetRect.x + targetRect.width / 2) - elemRect.x, \"px \").concat((elemRect.y + elemRect.height <= targetRect.y + targetRect.height / 4 ? targetRect.y : targetRect.y + targetRect.height <= elemRect.y + targetRect.height / 4 ? targetRect.y + targetRect.height : targetRect.y + targetRect.height / 2) - elemRect.y, \"px\"));\r\n        }\r\n        //更改 高度/宽度 时隐藏滚动条\r\n        var setOverflowX_1 = animation.width !== undefined;\r\n        var setOverflowY_1 = animation.height !== undefined;\r\n        var scroll_1;\r\n        if (setOverflowX_1 || setOverflowY_1) {\r\n            scroll_1 = new _DisableScroll__WEBPACK_IMPORTED_MODULE_1__[\"default\"](elem);\r\n            scroll_1.disableWindowScroll(setOverflowX_1, setOverflowY_1);\r\n        }\r\n        /**\r\n         * 计算渐变属性的最终属性\r\n         * 如果隐藏元素, 则 animation 表示最终属性\r\n         * 如果显示元素, 则 需要手动计算最终属性\r\n         */\r\n        var to_1 = animation;\r\n        if (value) {\r\n            to_1 = {};\r\n            var from = animation;\r\n            if (elem.style.__toggle__ != undefined) {\r\n                from = {};\r\n                for (var prop in animation) {\r\n                    from[prop] = (0,_dom__WEBPACK_IMPORTED_MODULE_0__.getStyle)(elem, prop);\r\n                    (0,_dom__WEBPACK_IMPORTED_MODULE_0__.setStyle)(elem, prop, \"\");\r\n                }\r\n                elem.style[animateFix.transition] = \"\";\r\n            }\r\n            for (var prop in animation) {\r\n                to_1[prop] = (0,_dom__WEBPACK_IMPORTED_MODULE_0__.getStyle)(elem, prop);\r\n                (0,_dom__WEBPACK_IMPORTED_MODULE_0__.setStyle)(elem, prop, from[prop]);\r\n            }\r\n        }\r\n        //执行渐变\r\n        elem.style.__toggle__ = value;\r\n        animate(elem, to_1, function () {\r\n            delete elem.style.__toggle__;\r\n            if (scroll_1 !== undefined) {\r\n                scroll_1.enableWindowScroll();\r\n                if (setOverflowX_1) {\r\n                    elem.style.minWidth = \"\";\r\n                }\r\n                if (setOverflowY_1) {\r\n                    elem.style.minHeight = \"\";\r\n                }\r\n            }\r\n            if (setTransformOrigin_1) {\r\n                (0,_dom__WEBPACK_IMPORTED_MODULE_0__.setStyle)(elem, \"transformOrigin\", \"\");\r\n            }\r\n            for (var prop in to_1) {\r\n                (0,_dom__WEBPACK_IMPORTED_MODULE_0__.setStyle)(elem, prop, \"\");\r\n            }\r\n            if (!value) {\r\n                hide(elem);\r\n            }\r\n            callback && callback.call(elem, value);\r\n        }, duration, timingFunction);\r\n    }\r\n    else {\r\n        value ? show(elem) : hide(elem);\r\n        callback && (callback.call(elem, value));\r\n    }\r\n}\r\n\n\n/***/ }),\n/* 15 */\n/***/ ((__unused_webpack_module, __webpack_exports__, __nested_webpack_require_71791__) => {\n\n__nested_webpack_require_71791__.r(__webpack_exports__);\n/* harmony export */ __nested_webpack_require_71791__.d(__webpack_exports__, {\n/* harmony export */   \"addClass\": () => (/* binding */ addClass),\n/* harmony export */   \"after\": () => (/* binding */ after),\n/* harmony export */   \"append\": () => (/* binding */ append),\n/* harmony export */   \"before\": () => (/* binding */ before),\n/* harmony export */   \"children\": () => (/* binding */ children),\n/* harmony export */   \"colsest\": () => (/* binding */ colsest),\n/* harmony export */   \"computeStyle\": () => (/* binding */ computeStyle),\n/* harmony export */   \"contains\": () => (/* binding */ contains),\n/* harmony export */   \"find\": () => (/* binding */ find),\n/* harmony export */   \"first\": () => (/* binding */ first),\n/* harmony export */   \"getAttr\": () => (/* binding */ getAttr),\n/* harmony export */   \"getHtml\": () => (/* binding */ getHtml),\n/* harmony export */   \"getOffset\": () => (/* binding */ getOffset),\n/* harmony export */   \"getRect\": () => (/* binding */ getRect),\n/* harmony export */   \"getScroll\": () => (/* binding */ getScroll),\n/* harmony export */   \"getStyle\": () => (/* binding */ getStyle),\n/* harmony export */   \"hasClass\": () => (/* binding */ hasClass),\n/* harmony export */   \"index\": () => (/* binding */ index),\n/* harmony export */   \"last\": () => (/* binding */ last),\n/* harmony export */   \"match\": () => (/* binding */ match),\n/* harmony export */   \"next\": () => (/* binding */ next),\n/* harmony export */   \"off\": () => (/* binding */ off),\n/* harmony export */   \"offsetParent\": () => (/* binding */ offsetParent),\n/* harmony export */   \"on\": () => (/* binding */ on),\n/* harmony export */   \"once\": () => (/* binding */ once),\n/* harmony export */   \"parent\": () => (/* binding */ parent),\n/* harmony export */   \"parse\": () => (/* binding */ parse),\n/* harmony export */   \"prepend\": () => (/* binding */ prepend),\n/* harmony export */   \"prev\": () => (/* binding */ prev),\n/* harmony export */   \"query\": () => (/* binding */ query),\n/* harmony export */   \"ready\": () => (/* binding */ ready),\n/* harmony export */   \"removeClass\": () => (/* binding */ removeClass),\n/* harmony export */   \"setAttr\": () => (/* binding */ setAttr),\n/* harmony export */   \"setHtml\": () => (/* binding */ setHtml),\n/* harmony export */   \"setOffset\": () => (/* binding */ setOffset),\n/* harmony export */   \"setRect\": () => (/* binding */ setRect),\n/* harmony export */   \"setScroll\": () => (/* binding */ setScroll),\n/* harmony export */   \"setStyle\": () => (/* binding */ setStyle),\n/* harmony export */   \"toggleClass\": () => (/* binding */ toggleClass),\n/* harmony export */   \"trigger\": () => (/* binding */ trigger),\n/* harmony export */   \"vendor\": () => (/* binding */ vendor)\n/* harmony export */ });\n/* harmony import */ var _Rect__WEBPACK_IMPORTED_MODULE_0__ = __nested_webpack_require_71791__(13);\n\r\nvar parseFix;\r\nvar parseContiner;\r\n/**\r\n * 解析一段 HTML 并返回相应的节点\r\n * @param html 要解析的HTML片段\r\n * @param context 创建节点使用的文档\r\n * @returns 返回要创建的节点, 如果HTML中包含多个节点,则返回一个文档片段\r\n */\r\nfunction parse(html, context) {\r\n    if (context === void 0) { context = document; }\r\n    if (!parseFix) {\r\n        var select = [1, \"<select mutiple='mutiple'>\", \"</select>\"];\r\n        var table = [1, \"<table>\", \"</table>\"];\r\n        var tr = [3, \"<table><tbody><tr>\", \"</tr></tbodt></table>\"];\r\n        parseFix = {\r\n            __proto__: null,\r\n            option: select,\r\n            optgroup: select,\r\n            thead: table,\r\n            tbody: table,\r\n            tfoot: table,\r\n            caption: table,\r\n            colgroup: table,\r\n            tr: [2, \"<table><tbody>\", \"</tbody></table>\"],\r\n            col: [2, \"<table><tbody></tbody><colgroup>\", \"</colgroup></table>\"],\r\n            td: tr,\r\n            th: tr,\r\n            legend: [1, \"<fieldset>\", \"</fieldset>\"],\r\n            area: [1, \"<map>\", \"</map>\"],\r\n            param: [1, \"<object>\", \"</object>\"]\r\n        };\r\n        parseContiner = document.createElement('div');\r\n    }\r\n    var container = context === document ? parseContiner : context.createElement(\"div\");\r\n    var match = /^<(\\w+)/.exec(html);\r\n    var wrapper = match && parseFix[match[1].toLowerCase()];\r\n    if (wrapper) {\r\n        container.innerHTML = wrapper[1] + html + wrapper[2];\r\n        for (var level = wrapper[0]; level--; container = container.lastChild)\r\n            ;\r\n    }\r\n    var result = container.firstChild || context.createTextNode(html);\r\n    if (result.nextSibling) {\r\n        //如果逐个添加内容,则会导致浏览器反复渲染,使用文档片段保存,然后一次性的将他们添加到文档中\r\n        result = context.createDocumentFragment();\r\n        while (container.firstChild) {\r\n            result.appendChild(container.firstChild);\r\n        }\r\n    }\r\n    return result;\r\n}\r\nfunction query(node, selector) {\r\n    return Array.prototype.slice.call(querySelector(node, selector));\r\n}\r\nfunction find(node, selector) {\r\n    return querySelector(node, selector, true);\r\n}\r\nfunction querySelector(node, selector, first) {\r\n    if (typeof node === 'string') {\r\n        selector = node;\r\n        node = document;\r\n    }\r\n    return first ? node.querySelector(selector) : node.querySelectorAll(selector);\r\n}\r\n/**\r\n * 判断元素是否匹配指定的CSS选择器\r\n * @param elem 要判断的元素\r\n * @param selector 要判断的CSS选择器\r\n * @returns 如果匹配则返回 true, 否则返回false\r\n * @example matches(document.body, 'body') //true\r\n */\r\nfunction match(elem, selector) {\r\n    if (elem.matches) {\r\n        return elem.matches(selector);\r\n    }\r\n    var parent = elem.parentNode;\r\n    var actualParent = parent || elem.ownerDocument.documentElement;\r\n    parent || actualParent.appendChild(elem);\r\n    try {\r\n        return Array.prototype.indexOf.call(querySelector(actualParent, selector), elem) >= 0;\r\n    }\r\n    finally {\r\n        parent || actualParent.removeChild(elem);\r\n    }\r\n}\r\n/**\r\n * 获取节点的第一个子元素\r\n * @param node 要获取的节点\r\n * @param selector 用于筛选元素的 css 选择器\r\n * @returns 返回元素, 如果元素不存在则返回null\r\n */\r\nfunction first(node, selector) {\r\n    return walk(node, selector, \"nextSibling\", \"firstChild\");\r\n}\r\n/**\r\n * 获取节点的最后一个子节点\r\n * @param node 要获取的节点\r\n * @param selector 用于筛选元素的 css 选择器\r\n * @returns 返回元素,如果元素不存在则返回null\r\n */\r\nfunction last(node, selector) {\r\n    return walk(node, selector, \"previousSibling\", \"lastChild\");\r\n}\r\n/**\r\n * 获取节点的下一个相邻元素\r\n * @param node 要获取的节点\r\n * @param selector 用于筛选元素的CSS选择器\r\n * @returns 返回元素,如果元素不存在则返回null\r\n */\r\nfunction next(node, selector) {\r\n    return walk(node, selector, \"nextSibling\");\r\n}\r\n/**\r\n * 获取节点的上一个相邻元素\r\n * @param node 要获取的节点\r\n * @param selector 用于筛选元素的CSS选择器\r\n * @returns 返回元素,如果元素不存在则返回null\r\n */\r\nfunction prev(node, selector) {\r\n    return walk(node, selector, \"previousSibling\");\r\n}\r\n/**\r\n * 获取节点的父元素\r\n * @param node 要获取的节点\r\n * @param selector 用于筛选元素的CSS选择器\r\n * @returns 返回元素,如果元素不存在则返回null\r\n */\r\nfunction parent(node, selector) {\r\n    return walk(node, selector, \"parentNode\");\r\n}\r\nfunction walk(node, selector, nextProp, firstProp) {\r\n    if (firstProp === void 0) { firstProp = nextProp; }\r\n    for (node = node[firstProp]; node; node = node[nextProp]) {\r\n        if (node.nodeType === 1 && (!selector || match(node, selector))) {\r\n            return node;\r\n        }\r\n    }\r\n    return null;\r\n}\r\n/**\r\n * 获取指定元素的属性值\r\n * @param elem 要获取的元素\r\n * @param attrName 要获取的属性名\r\n * @returns 返回的属性, 如果不存在则返回 null\r\n */\r\nfunction getAttr(elem, attrName) {\r\n    return attrName in elem ? elem[attrName] : elem.getAttribute(attrName);\r\n}\r\n/**\r\n * 设置指定元素的属性值\r\n * @param elem 要设置的元素\r\n * @param attrName 要设置的属性名\r\n * @param value 要设置的属性值, 如果为 null 则表示删除属性\r\n */\r\nfunction setAttr(elem, attrName, value) {\r\n    if (/^on./.test(attrName) && attrName in elem) {\r\n        if (typeof value === 'string') {\r\n            elem.setAttribute(attrName, value);\r\n        }\r\n        else {\r\n            elem[attrName] = value;\r\n        }\r\n    }\r\n    else {\r\n        if (attrName in elem || value != null && typeof value !== 'string') {\r\n            elem[attrName] = value;\r\n        }\r\n        else if (value == null) {\r\n            elem.removeAttribute(attrName);\r\n        }\r\n        else {\r\n            elem.setAttribute(attrName, value);\r\n        }\r\n    }\r\n}\r\n/**\r\n * 从指定节点开始向父元素查找第一个匹配指定 CSS 选择器的元素\r\n * @param node  要开始查找的节点\r\n * @param selector  要匹配的CSS选择器\r\n * @param context  如果提供了上下文,则在指定的元素内查找\r\n * @returns 返回元素  如果不存在则返回 null\r\n * @example closest(document.)\r\n */\r\nfunction colsest(node, selector, context) {\r\n    while (node && node !== context && (node.nodeType !== 1 || !match(node, selector))) {\r\n        node = node.parentNode;\r\n    }\r\n    return node === context ? null : node;\r\n}\r\n/**\r\n * 获取指定节点的所有子元素\r\n * @param node 要获取的节点\r\n * @param selector 用于筛选元素的 CSS 选择器\r\n * @returns 返回包含所有子元素的数组\r\n */\r\nfunction children(node, selector) {\r\n    var result = [];\r\n    for (node = node.firstChild; node; node = node.nextSibling) {\r\n        if (node.nodeType === 1 && (!selector && match(node, selector))) {\r\n            result.push(node);\r\n        }\r\n    }\r\n    return result;\r\n}\r\n/**\r\n * 判断指定节点是否包含另一个节点\r\n * @param node 要判断的节点\r\n * @param child 要判断的子节点\r\n * @returns 如果child同node或实其子节点,则返回 true, 否则返回false\r\n */\r\nfunction contains(node, child) {\r\n    if (node.contains) {\r\n        return node.contains(child);\r\n    }\r\n    for (; child; child = child.parentNode) {\r\n        if (child === node) {\r\n            return true;\r\n        }\r\n    }\r\n    return false;\r\n}\r\n/**\r\n * 获取指定节点在父节点中的索引\r\n * @param node 要处理的节点\r\n * @returns 返回索引,如果没有父元素则返回 0\r\n */\r\nfunction index(node) {\r\n    var result = 0;\r\n    while ((node = node.previousSibling)) {\r\n        if (node.nodeType === 1) {\r\n            result++;\r\n        }\r\n    }\r\n    return result;\r\n}\r\n/**\r\n * 将节点插入到子节点最后一位\r\n * @param node 插入所在的节点\r\n * @param content 要插入的HTML或节点\r\n */\r\nfunction append(node, content) {\r\n    return insert(node, content, false, false);\r\n}\r\n/**\r\n *  将节点插入到子节点第一位\r\n * @param node 插入所在的节点\r\n * @param content 要插入的HTML或节点\r\n * @returns\r\n */\r\nfunction prepend(node, content) {\r\n    return insert(node, content, true, false);\r\n}\r\n/**\r\n * 在指定节点前插入节点或HTML\r\n * @param node 插入所在的节点\r\n * @param content 要插入的HTML或节点\r\n * @returns\r\n */\r\nfunction before(node, content) {\r\n    return insert(node, content, true, true);\r\n}\r\n/**\r\n * 在指定节点后插入节点或HTML\r\n * @param node 插入所在的节点\r\n * @param content 要插入的HTML或节点\r\n * @returns\r\n */\r\nfunction after(node, content) {\r\n    return insert(node, content, false, true);\r\n}\r\nfunction insert(node, content, prepend, sibling) {\r\n    if (content) {\r\n        if (typeof content === \"string\") {\r\n            content = parse(content, node.ownerDocument);\r\n        }\r\n        if (sibling) {\r\n            return node.parentNode.insertBefore(content, prepend ? node : node.nextSibling);\r\n        }\r\n        return prepend ? node.insertBefore(content, node.firstChild) : node.appendChild(content);\r\n    }\r\n}\r\n/**\r\n * 为当前的 css 属性添加当前浏览器特定的后缀\r\n * @param propName  要处理的 CSS 属性名\r\n * @return 返回已添加后缀的 CSS 属性名\r\n * @example vendor(\"transform\")    比如 webkit 内核的 webkitOpacity 属性\r\n */\r\nfunction vendor(propName) {\r\n    if (!(propName in document.documentElement.style)) {\r\n        var capName = propName.charAt(0).toUpperCase() + propName.slice(1);\r\n        for (var _i = 0, _a = ['webkit', 'Moz', 'ms', 'O']; _i < _a.length; _i++) {\r\n            var prefix = _a[_i];\r\n            if ((prefix + capName) in document.documentElement.style) {\r\n                return prefix + capName;\r\n            }\r\n        }\r\n    }\r\n    return propName;\r\n}\r\n/**\r\n * 获取指定元素的 CSS 属性值\r\n * @param element 要获取的元素\r\n * @param propName  要获取的 CSS 属性名\r\n */\r\nfunction getStyle(elem, propName) {\r\n    return elem.ownerDocument.defaultView.getComputedStyle(elem)[vendor(propName)];\r\n}\r\n/**\r\n * 设置指定元素的css属性值\r\n * @param elem 要设置的元素\r\n * @param propName 要设置的css属性名\r\n * @param value 要设置的css属性值,如果是数字,则自动添加像素单位\r\n */\r\nfunction setStyle(elem, propName, value) {\r\n    elem.style[vendor(propName)] = value && typeof value === \"number\" && !/^(?:columnCount|fillOpacity|flexGrow|flexShrink|fontWeight|lineHeight|opacity|order|orphans|widows|zIndex|zoom)$/.test(propName) ? value + \"px\" : value;\r\n}\r\n/**\r\n * 计算一个元素的样式值\r\n * @param elem 要计算的元素\r\n * @param propNames 要计算的CSS属性名列表\r\n * @returns 返回所有的 CSS属性值的和\r\n */\r\nfunction computeStyle(elem) {\r\n    var propNames = [];\r\n    for (var _i = 1; _i < arguments.length; _i++) {\r\n        propNames[_i - 1] = arguments[_i];\r\n    }\r\n    var result = 0;\r\n    var computedStyle = elem.ownerDocument.defaultView.getComputedStyle(elem);\r\n    for (var _a = 0, propNames_1 = propNames; _a < propNames_1.length; _a++) {\r\n        var prop = propNames_1[_a];\r\n        result += parseFloat(computedStyle[prop]) || 0;\r\n    }\r\n    return result;\r\n}\r\n/**\r\n * 获取指定元素内部HTML\r\n * @param elem 要回去的元素\r\n * @returns 返回内部HTML\r\n */\r\nfunction getHtml(elem) {\r\n    return elem.innerHTML;\r\n}\r\n/**\r\n * 设置指定元素内部的HTML\r\n * @param elem 要设置的元素\r\n * @param value 要设置的内部HTML\r\n */\r\nfunction setHtml(elem, value) {\r\n    elem.innerHTML = value;\r\n}\r\n/**\r\n * 判断指定元素是否已添加指定的 CSS 类名\r\n * @param elem 要判断的元素\r\n * @param className 要判断的 类名\r\n */\r\nfunction hasClass(elem, className) {\r\n    return (\" \" + elem.className + \" \").indexOf(\" \" + className + \" \") >= 0;\r\n}\r\n/**\r\n * 添加指定元素的 CSS 类名\r\n * @param elem 要判断的元素\r\n * @param className 要添加的 CSS 类名\r\n */\r\nfunction addClass(elem, className) {\r\n    toggleClass(elem, className, true);\r\n}\r\n/**\r\n * 删除指定元素的 CSS 类名\r\n * @param elem 要判断的元素\r\n * @param className 要删除的 CSS 类名\r\n */\r\nfunction removeClass(elem, className) {\r\n    toggleClass(elem, className, false);\r\n}\r\n/**\r\n * 如果存在则删除,不存在则添加指定的CSS类名\r\n * @param elem 要处理的元素\r\n * @param className 要添加或删除的类名\r\n * @param value 如果为true则添加 CSS 类名,如果为 false 则删除 CSS 类名\r\n */\r\nfunction toggleClass(elem, className, value) {\r\n    if (hasClass(elem, className)) {\r\n        if (value !== true) {\r\n            elem.className = (\" \" + elem.className + \" \").replace(\" \" + className + \" \", \"\").trim();\r\n        }\r\n    }\r\n    else if (value !== false) {\r\n        elem.className = elem.className ? elem.className + \" \" + className : className;\r\n    }\r\n}\r\nvar eventFix;\r\nfunction on(elem, eventName, selector, listener, scope) {\r\n    if (!eventFix) {\r\n        var isEnterOrLeave = function (e, target) {\r\n            return /(?:ter|e)$/.test(e.type) || !contains(target, e.relatedTarget);\r\n        };\r\n        eventFix = {\r\n            __proto__: null,\r\n            // focus/blur 不支持冒泡, 委托时使用 foucin/focusout\r\n            focus: { delegate: \"focusin\" },\r\n            blur: { delegate: 'focusout' },\r\n            // mouseenter/mouselave 不支持冒泡.委托时使用 mouseover/mouseout\r\n            mouseenter: { delegate: \"mouseover\", filter: isEnterOrLeave },\r\n            mouseleave: { delegate: \"mouseout\", filter: isEnterOrLeave },\r\n            // pointerenter/pointerleave 不支持冒泡,委托时使用 pointerover/pointerout\r\n            pointerenter: { delegate: \"pointerover\", filter: isEnterOrLeave },\r\n            pointerleave: { delegate: \"pointerout\", filter: isEnterOrLeave },\r\n            //支持绑定原生click\r\n            mouseclick: { bind: \"click\" }\r\n        };\r\n        var html = Document.prototype;\r\n        // Firefox 浏览器不支持 focusin/focusout 事件\r\n        // Chorme 实际支持focusin/focusout 事件,但是判断比较复杂,所以按不支持处理\r\n        if (!(\"onfocusin\" in html)) {\r\n            var focusAdd = function (elem, listener) {\r\n                elem.addEventListener(this.bind, listener, true);\r\n            };\r\n            var focusRemove = function (elem, listener) {\r\n                elem.removeEventListener(this.bind, listener, true);\r\n            };\r\n            eventFix.focusin = { bind: 'focus', add: focusAdd, remove: focusRemove };\r\n            eventFix.focusout = { bind: 'blur', add: focusAdd, remove: focusRemove };\r\n        }\r\n        // mouseover 和 mouseenter 两者之前区别 mouseenter 不支持冒泡 \r\n        if (!(\"onmouseenter\" in html)) {\r\n            eventFix.mouseenter.bind = \"mouseover\";\r\n            eventFix.mouseleave.bind = \"mouseout\";\r\n        }\r\n        /**\r\n        * Firefox: 不支持mousewheel事件,使用 \"DOMMouseScroll\" 事件代替\r\n        * mousewheel 事件中的 event.wheelDelta 属性值,如果正值说明滚轮向上滚动,如果负值说明向下滚动,返回的值均为120的倍数   幅度大小: event.wheelDelta / 120\r\n        * DOMMouseScroll 事件 event.detail 属性值, 如果是负数则说明向上滚动,如果是正值说明向下滚动,返回的值均为3的倍数  幅度大小: event.detail / 3\r\n        */\r\n        if (!(\"onmousewheel\" in html)) {\r\n            eventFix.mousewheel = {\r\n                bind: \"DOMMouseScroll\",\r\n                filter: function (e) {\r\n                    e.wheelDelta = -(e.detail || 0) / 3;\r\n                }\r\n            };\r\n        }\r\n        /**\r\n         * 低版本浏览器不支持 auxclick 事件\r\n         * 使用mouseup事件代替,并且只有 button 是鼠标右键是触发 事件\r\n         */\r\n        if (!(\"onauxclick\" in html)) {\r\n            eventFix.auxclick = {\r\n                bind: \"mouseup\",\r\n                filter: function (e) { return e.button === 3; }\r\n            };\r\n        }\r\n        /**\r\n         * 低版本浏览器不兼容\r\n         *\r\n         */\r\n        if (!(\"onpointerdown\" in html)) {\r\n            eventFix.pointerover = { bind: 'mouseover' };\r\n            eventFix.pointerout = { bind: 'mouseover' };\r\n            eventFix.pointerenter.bind = eventFix.mouseenter.bind || \"mouseenter\";\r\n            eventFix.pointerenter.delegate = \"mouseover\";\r\n            eventFix.pointerleave.bind = eventFix.mouseleave.bind || \"mouseleave\";\r\n            eventFix.pointerleave.delegate = \"mouseout\";\r\n            eventFix.pointerdown = { bind: 'mousedown' };\r\n            eventFix.pointerup = { bind: 'mouseup' };\r\n            eventFix.pointermove = { bind: 'mousemove' };\r\n        }\r\n        if (window.TouchEvent) {\r\n            var initTouchEvent = function (e) {\r\n                //PC chorme 修复触摸事件的 pageX 和 pageY 都是0\r\n                if (!e.pageX && !e.pageY && e.changedTouches.length) {\r\n                    Object.defineProperty(e, \"pageX\", { get: function () { return this.changedTouches[0].pageX; } });\r\n                    Object.defineProperty(e, \"pageY\", { get: function () { return this.changedTouches[0].pageY; } });\r\n                    Object.defineProperty(e, \"clientX\", { get: function () { return this.changedTouches[0].clientX; } });\r\n                    Object.defineProperty(e, \"clientY\", { get: function () { return this.changedTouches[0].clientY; } });\r\n                    Object.defineProperty(e, \"which\", { value: 1 });\r\n                }\r\n            };\r\n            eventFix.click = {\r\n                filter: initTouchEvent,\r\n                add: function (elem, listener) {\r\n                    var state = 0;\r\n                    elem.addEventListener('touchstart', listener.__touchStart__ = function (e) {\r\n                        if (e.changedTouches.length === 1) {\r\n                            state = [e.changedTouches[0].pageX, e.changedTouches[0].pageY];\r\n                        }\r\n                    }, false);\r\n                    elem.addEventListener('touchend', listener.__touchEnd__ = function (e) {\r\n                        if (state && e.changedTouches.length === 1 && Math.pow(e.changedTouches[0].pageX - state[0], 2) + Math.pow(e.changedTouches[0].pageY - state[1], 2) < 25) {\r\n                            state = 1;\r\n                            listener.call(elem, e);\r\n                        }\r\n                    }, false);\r\n                    elem.addEventListener(\"click\", listener.__click__ = function (e) {\r\n                        var trigger = state !== 1;\r\n                        state = 0;\r\n                        trigger && listener.call(this, e);\r\n                    }, false);\r\n                },\r\n                remove: function (elem, listener) {\r\n                    elem.removeEventListener(\"touchstart\", listener.__touchStart__, false);\r\n                    elem.removeEventListener(\"touchend\", listener.__touchEnd__, false);\r\n                    elem.removeEventListener(\"click\", listener.__click__, false);\r\n                }\r\n            };\r\n            if (eventFix.pointerout) {\r\n                var pointerAdd = function (elem, listener) {\r\n                    var state = 0;\r\n                    elem.addEventListener(this.touch, listener.__touch__ = function (e) {\r\n                        state = 1;\r\n                        listener.call(this, e);\r\n                    }, false);\r\n                    elem.addEventListener(this.bind, listener.__mouse__ = function (e) {\r\n                        if (state) {\r\n                            state = 0;\r\n                        }\r\n                        else {\r\n                            listener.call(this, e);\r\n                        }\r\n                    }, false);\r\n                };\r\n                var pointerRemove = function (elem, listener) {\r\n                    elem.removeEventListener(this.touch, listener.__touch__, false);\r\n                    elem.removeEventListener(this.bind, listener.__mouse__, false);\r\n                };\r\n                eventFix.pointerdown = { bind: \"mousedown\", touch: \"touchstart\", filter: initTouchEvent, add: pointerAdd, remove: pointerRemove };\r\n                eventFix.pointerup = { bind: \"mouseup\", touch: \"touchend\", filter: initTouchEvent, add: pointerAdd, remove: pointerRemove };\r\n                eventFix.pointermove = { bind: \"mousemove\", touch: \"touchmove\", filter: initTouchEvent, add: pointerAdd, remove: pointerRemove };\r\n            }\r\n        }\r\n    }\r\n    if (typeof selector !== 'string') {\r\n        scope = listener;\r\n        listener = selector;\r\n        selector = \"\";\r\n    }\r\n    scope = scope || elem;\r\n    //当前节点上绑定的数据\r\n    var events = elem.__events__ || (elem.__events__ = Object.create(null));\r\n    var key = selector ? eventName + \" \" + selector : eventName;\r\n    //当前节点绑定的当前事件回调\r\n    var listeners = events[key];\r\n    var delegateFix = eventFix[eventName] || undefined;\r\n    var bindFix = selector && delegateFix && delegateFix.delegate ? eventFix[eventName = delegateFix.delegate] : delegateFix;\r\n    /**\r\n     * 满足以下任一情况,需要重新封装监听器\r\n     * 1.事件委托, 需要重新定位目标元素\r\n     * 2.事件有特殊的过滤器,仅在满足条件时触发\r\n     * 3.需要重写回调函数的 this\r\n     * 4.监听器具有第二参数,需要重写回调函数的第二参数\r\n     * 5.监听器已添加需重新封装才能绑定成功\r\n     */\r\n    if (selector || scope !== elem || bindFix && bindFix.filter || listener.length > 1 || listeners && indexOfListener(listeners, listener, scope) >= 0) {\r\n        var originalListener_1 = listener;\r\n        listener = function (e) {\r\n            var target = scope;\r\n            if (selector && (!(target = colsest(e.target, selector, target)) || (delegateFix !== bindFix && delegateFix.filter && delegateFix.filter(e, target) === false))) {\r\n                return;\r\n            }\r\n            if (bindFix && bindFix.filter && bindFix.filter(e, target) === false) {\r\n                return;\r\n            }\r\n            originalListener_1.call(scope, e, target);\r\n        };\r\n        listener.__original__ = originalListener_1;\r\n        listener.__scope__ = scope;\r\n    }\r\n    if (!listeners) {\r\n        events[key] = listener;\r\n    }\r\n    else if (Array.isArray(listeners)) {\r\n        listeners.push(listener);\r\n    }\r\n    else {\r\n        events[key] = [listeners, listener];\r\n    }\r\n    bindFix && bindFix.add ? bindFix.add(elem, listener) : elem.addEventListener(bindFix && bindFix.bind || eventName, listener, false);\r\n}\r\nfunction off(elem, eventName, selector, listener, scope) {\r\n    if (typeof selector !== \"string\") {\r\n        scope = listener;\r\n        listener = selector;\r\n        selector = \"\";\r\n    }\r\n    scope = scope || elem;\r\n    var events = elem.__events__;\r\n    var key = selector ? eventName + \" \" + selector : eventName;\r\n    var listeners = events && events[key];\r\n    if (listeners) {\r\n        if (listener) {\r\n            var index_1 = indexOfListener(listeners, listener, scope);\r\n            if (~index_1) {\r\n                if (Array.isArray(listeners)) {\r\n                    listener = listeners[index_1];\r\n                    listeners.splice(index_1, 1);\r\n                    if (!listeners.length) {\r\n                        delete events[key];\r\n                    }\r\n                }\r\n                else {\r\n                    listener = listeners;\r\n                    delete events[key];\r\n                }\r\n            }\r\n            var bindFix = eventFix && eventFix[eventName];\r\n            bindFix && bindFix.remove ? bindFix.remove(elem, listener) : elem.removeEventListener((selector ? bindFix && bindFix.delegate : bindFix && bindFix.bind) || eventName, listener, false);\r\n        }\r\n        else if (Array.isArray(listeners)) {\r\n            for (var _i = 0, listeners_1 = listeners; _i < listeners_1.length; _i++) {\r\n                listener = listeners_1[_i];\r\n                off(elem, eventName, selector, listener, scope);\r\n            }\r\n        }\r\n        else {\r\n            off(elem, eventName, selector, listeners, scope);\r\n        }\r\n    }\r\n}\r\n/**\r\n * 绑定元素只执行一次的事件\r\n * @param elem 要解绑的元素或文档\r\n * @param eventName 要解绑的事件名\r\n * @param listener 要解绑的事件监听器,如果未提供则解绑所有监听器\r\n * @param scope 设置 listener 中的this值\r\n */\r\nfunction once(elem, eventName, listener, scope) {\r\n    var fn = function () {\r\n        if (listener) {\r\n            listener.apply(scope || this, arguments);\r\n        }\r\n        off(elem, eventName, fn, scope);\r\n    };\r\n    on(elem, eventName, fn, scope);\r\n}\r\nfunction indexOfListener(listeners, listener, scope) {\r\n    if (Array.isArray(listeners)) {\r\n        for (var i = 0; i < listeners.length; i++) {\r\n            //先 && 后 ||\r\n            if (listeners[i] === listener || listeners[i].__original__ === listener && listeners[i].__scope__ == scope) {\r\n                return i;\r\n            }\r\n        }\r\n        return -1;\r\n    }\r\n    return listeners === listener || listeners.__original__ === listener && listeners.__scope__ === scope ? 0 : -1;\r\n}\r\n/**\r\n * 获取指定元素的定位父元素\r\n * @param elem 要获取的元素\r\n * @returns 要返回定位父元素\r\n */\r\nfunction offsetParent(elem) {\r\n    var result = elem;\r\n    //一致向上寻找, position属性非 static 的,定位元素\r\n    while ((result = result.offsetParent) && result.nodeName !== \"HTML\" && getStyle(result, \"position\") === \"static\")\r\n        ;\r\n    return result || elem.ownerDocument.documentElement;\r\n}\r\n/**\r\n * 获取指定元素和其定位父元素的偏移距离\r\n * @param elem 要获取的元素\r\n * @returns 返回坐标\r\n */\r\nfunction getOffset(elem) {\r\n    var left = getStyle(elem, \"left\");\r\n    var top = getStyle(elem, \"top\");\r\n    if ((left && top && left !== 'auto' && top !== 'auto') || getStyle(elem, \"position\") !== \"absolute\") {\r\n        return new _Rect__WEBPACK_IMPORTED_MODULE_0__.Point(parseFloat(left) || 0, parseFloat(top) || 0);\r\n    }\r\n    //当 position 属性是 absolute 时,需要寻找定位父元素,并且根据定位父元素获取偏移距离\r\n    var parent = offsetParent(elem);\r\n    var rect = getRect(elem);\r\n    if (parent.nodeName !== \"HTML\") {\r\n        var rootRect = getRect(parent);\r\n        rect.x -= rootRect.x;\r\n        rect.y -= rootRect.y;\r\n    }\r\n    //位置减去当前 border 和 margin 宽度\r\n    rect.x -= computeStyle(elem, \"marginLeft\") + computeStyle(parent, \"borderLeftWidth\");\r\n    rect.y -= computeStyle(elem, \"marginTop\") + computeStyle(parent, \"borderTopWidth\");\r\n    return rect;\r\n}\r\n/**\r\n * 设置元素和其定位父元素的便宜距离\r\n * @param elem 要处理的元素\r\n * @param value 要设置的坐标\r\n */\r\nfunction setOffset(elem, value) {\r\n    if (value.x >= 0) {\r\n        elem.style.left = value.x + \"px\";\r\n    }\r\n    if (value.y >= 0) {\r\n        elem.style.top = value.y + \"px\";\r\n    }\r\n}\r\n/**\r\n * 获取指定元素的滚动距离\r\n * @param elem 要获取的元素或文档\r\n * @returns 返回作表, 如果元素不可滚动则返回原点s\r\n */\r\nfunction getScroll(elem) {\r\n    if (elem.nodeType === 9) {\r\n        var win = elem.defaultView;\r\n        if (\"scrollX\" in win) {\r\n            return {\r\n                x: win.scrollX,\r\n                y: win.scrollY\r\n            };\r\n        }\r\n        elem = elem.documentElement;\r\n    }\r\n    return {\r\n        x: elem.scrollLeft,\r\n        y: elem.scrollTop\r\n    };\r\n}\r\n/**\r\n * 设置指定元素的滚动距离\r\n * @param elem 要设置的元素或文档\r\n * @param value 要设置的坐标\r\n */\r\nfunction setScroll(elem, value) {\r\n    if (elem.nodeType === 9) {\r\n        elem.defaultView.scrollTo((value.x == null ? getScroll(elem) : value).x, (value.y == null ? getScroll(elem) : value).y);\r\n    }\r\n    else {\r\n        if (value.x !== null)\r\n            elem.scrollLeft = value.x;\r\n        if (value.y !== null)\r\n            elem.scrollTop = value.y;\r\n    }\r\n}\r\n/**\r\n * 获取指定元素的区域\r\n * @param elem 要获取的元素或文档\r\n * @returns 返回元素实际占用区域(含内边距和边框,不含外边距), 如果元素不可见则返回空区域\r\n */\r\nfunction getRect(elem) {\r\n    var doc = elem.nodeType === 9 ? elem : elem.ownerDocument;\r\n    var html = doc.documentElement;\r\n    var result = getScroll(doc);\r\n    if (elem.nodeType === 9) {\r\n        result.width = html.clientWidth;\r\n        result.height = html.clientHeight;\r\n    }\r\n    else {\r\n        var rect = elem.getBoundingClientRect();\r\n        result.x = rect.left - html.clientLeft; //到左侧的距离 - 左边框宽度\r\n        result.y = rect.top - html.clientTop;\r\n        result.width = rect.width;\r\n        result.height = rect.height;\r\n    }\r\n    return result;\r\n}\r\n/**\r\n * 设置指定元素的区域\r\n * @param elem 要设置的元素\r\n * @param value 要设置的内容区域(含内边距和边框, 不包含外边距)\r\n * @example setRect(document.body, {width:200, height:400})\r\n */\r\nfunction setRect(elem, value) {\r\n    var style = elem.style;\r\n    if (value.x != null || value.y != null) {\r\n        if (!/^(?:abs|fix)/.test(getStyle(elem, \"position\"))) {\r\n            style.position = \"relative\";\r\n        }\r\n        var currentPosition = getRect(elem);\r\n        var offset = getOffset(elem);\r\n        if (value.x !== null) {\r\n            style.left = offset.x + value.x - currentPosition.x + \"px\";\r\n        }\r\n        if (value.y !== null) {\r\n            style.top = offset.y + value.y - currentPosition.y + \"px\";\r\n        }\r\n    }\r\n    if (value.width != null || value.height != null) {\r\n        var boxSizing = getStyle(elem, \"boxSizing\") === \"border-box\";\r\n        if (value.width != null) {\r\n            style.width = value.width - (boxSizing ? 0 : computeStyle(elem, \"borderLeftWidth\", \"paddingLeft\", \"paddingRight\", \"borderRightWidth\")) + \"px\";\r\n        }\r\n        if (value.height != null) {\r\n            style.height = value.height - (boxSizing ? 0 : computeStyle(elem, \"borderTopWidth\", \"paddingTop\", \"paddingBottom\", \"borderBottomWidth\")) + \"px\";\r\n        }\r\n    }\r\n}\r\nfunction trigger(elem, eventName, selector, event) {\r\n    if (typeof selector !== \"string\") {\r\n        event = selector;\r\n        selector = \"\";\r\n    }\r\n    var listeners = elem.__events__[selector ? eventName + \" \" + selector : eventName];\r\n    if (listeners) {\r\n        event = event || {};\r\n        if (!event.type)\r\n            event.type = eventName;\r\n        if (!event.target)\r\n            event.target = selector ? find(elem, selector) : elem;\r\n        if (Array.isArray(listeners)) {\r\n            for (var _i = 0, listeners_2 = listeners; _i < listeners_2.length; _i++) {\r\n                var listener = listeners_2[_i];\r\n                listener.call(elem, event);\r\n            }\r\n        }\r\n        else {\r\n            listeners.call(elem, event);\r\n        }\r\n    }\r\n}\r\n/**\r\n * 页面可以访问到dom元素后执行指定函数\r\n * @param callback 要执行后的回调函数\r\n * @param context 要等待的文档对象\r\n */\r\nfunction ready(callback, context) {\r\n    if (context === void 0) { context = document; }\r\n    if (/^(?:complete|interactive)$/.test(context.readyState) && context.body) {\r\n        callback.call(context);\r\n    }\r\n    else {\r\n        context.addEventListener(\"DOMContentLoaded\", callback, false);\r\n    }\r\n}\r\n\n\n/***/ }),\n/* 16 */\n/***/ ((__unused_webpack_module, __webpack_exports__, __nested_webpack_require_102812__) => {\n\n__nested_webpack_require_102812__.r(__webpack_exports__);\n/* harmony export */ __nested_webpack_require_102812__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _dom__WEBPACK_IMPORTED_MODULE_0__ = __nested_webpack_require_102812__(15);\n\r\nvar DisableScroll = /** @class */ (function () {\r\n    function DisableScroll(elem) {\r\n        var _this = this;\r\n        this.elem = elem;\r\n        this.scrollX = null;\r\n        this.scrollY = null;\r\n        this.scrollFun = function () {\r\n            if (_this.scrollX !== null || _this.scrollY !== null) {\r\n                var point = (0,_dom__WEBPACK_IMPORTED_MODULE_0__.getScroll)(_this.elem);\r\n                if (elem.nodeType === 9) {\r\n                    var win = elem.defaultView;\r\n                    win.scrollTo(_this.scrollX ? _this.scrollX : point.x, _this.scrollY ? _this.scrollY : point.y);\r\n                }\r\n                else {\r\n                    _this.elem.scrollTo(_this.scrollX === null ? point.x : _this.scrollX, _this.scrollY === null ? point.y : _this.scrollY);\r\n                }\r\n            }\r\n        };\r\n    }\r\n    Object.defineProperty(DisableScroll.prototype, \"state\", {\r\n        /**\r\n         * 获取当前禁用滚动状态\r\n         * @returns 0 当前滚动可用 1当前滚动不可用\r\n         */\r\n        get: function () {\r\n            if (this.scrollX == null && this.scrollY == null) {\r\n                return 0;\r\n            }\r\n            return 1;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * 禁用屏幕滚动\r\n     * @param disableX  true|undefined 禁止横向滚动, false不禁用横向滚动\r\n     * @param disableY  true|undefined 禁止纵向滚动, false不禁用纵向滚动\r\n     */\r\n    DisableScroll.prototype.disableWindowScroll = function (disableX, disableY) {\r\n        var point = (0,_dom__WEBPACK_IMPORTED_MODULE_0__.getScroll)(this.elem);\r\n        if (disableX !== false) {\r\n            this.scrollX = point.x;\r\n        }\r\n        if (disableY !== false) {\r\n            this.scrollY = point.y;\r\n        }\r\n        (0,_dom__WEBPACK_IMPORTED_MODULE_0__.on)(this.elem, \"scroll\", this.scrollFun, this);\r\n    };\r\n    /**\r\n     * 启用屏幕滚动\r\n     */\r\n    DisableScroll.prototype.enableWindowScroll = function () {\r\n        this.scrollX = null;\r\n        this.scrollY = null;\r\n        (0,_dom__WEBPACK_IMPORTED_MODULE_0__.off)(this.elem, \"scroll\", this.scrollFun, this);\r\n    };\r\n    return DisableScroll;\r\n}());\r\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (DisableScroll);\r\n\n\n/***/ }),\n/* 17 */\n/***/ ((__unused_webpack_module, __webpack_exports__, __nested_webpack_require_105402__) => {\n\n__nested_webpack_require_105402__.r(__webpack_exports__);\n/* harmony export */ __nested_webpack_require_105402__.d(__webpack_exports__, {\n/* harmony export */   \"directives\": () => (/* binding */ directives),\n/* harmony export */   \"userDirectives\": () => (/* binding */ userDirectives)\n/* harmony export */ });\n/* harmony import */ var _shared_util_index__WEBPACK_IMPORTED_MODULE_0__ = __nested_webpack_require_105402__(2);\n/* harmony import */ var _directives_model__WEBPACK_IMPORTED_MODULE_1__ = __nested_webpack_require_105402__(18);\n/* harmony import */ var _directives_text__WEBPACK_IMPORTED_MODULE_2__ = __nested_webpack_require_105402__(25);\n\r\n\r\n\r\n/**\r\n * 系统内置指令\r\n */\r\nvar directives = (0,_shared_util_index__WEBPACK_IMPORTED_MODULE_0__.create)({\r\n    text: _directives_text__WEBPACK_IMPORTED_MODULE_2__[\"default\"],\r\n    model: _directives_model__WEBPACK_IMPORTED_MODULE_1__[\"default\"]\r\n});\r\n/**\r\n * 用户定义指令\r\n */\r\nvar userDirectives = (0,_shared_util_index__WEBPACK_IMPORTED_MODULE_0__.create)({});\r\n\n\n/***/ }),\n/* 18 */\n/***/ ((__unused_webpack_module, __webpack_exports__, __nested_webpack_require_106441__) => {\n\n__nested_webpack_require_106441__.r(__webpack_exports__);\n/* harmony export */ __nested_webpack_require_106441__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _shared_util_index__WEBPACK_IMPORTED_MODULE_0__ = __nested_webpack_require_106441__(2);\n/* harmony import */ var _core_prototype_$watch__WEBPACK_IMPORTED_MODULE_1__ = __nested_webpack_require_106441__(19);\n/* harmony import */ var _core_prototype_util_parseExpOrFn__WEBPACK_IMPORTED_MODULE_2__ = __nested_webpack_require_106441__(21);\n/* harmony import */ var _components_ux_dom_index__WEBPACK_IMPORTED_MODULE_3__ = __nested_webpack_require_106441__(12);\n/* harmony import */ var _core_observable_Observe__WEBPACK_IMPORTED_MODULE_4__ = __nested_webpack_require_106441__(3);\n/* harmony import */ var _core_VNode_Control__WEBPACK_IMPORTED_MODULE_5__ = __nested_webpack_require_106441__(1);\n/* harmony import */ var _directiveBase_attribute__WEBPACK_IMPORTED_MODULE_6__ = __nested_webpack_require_106441__(23);\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nvar ModelDirective = /** @class */ (function () {\r\n    function ModelDirective(element, value, control) {\r\n        this.element = element;\r\n        this.value = value;\r\n        this.control = control;\r\n        /**（DOM节点）当前节点绑定的监听事件 */\r\n        this.events = [];\r\n        this.attributes = new Map();\r\n        if (element instanceof _core_VNode_Control__WEBPACK_IMPORTED_MODULE_5__[\"default\"]) {\r\n            this.handler = handleControl;\r\n        }\r\n        else {\r\n            var tag = element.nodeName.toLowerCase();\r\n            var type = element.type;\r\n            if (tag === \"select\") {\r\n            }\r\n            else if (tag === \"input\" && type === \"radio\") {\r\n                this.handler = handlerRadio;\r\n            }\r\n            else if (tag === \"input\" && type === \"checkbox\") {\r\n                this.handler = handlerCheckBox;\r\n            }\r\n            else if (tag === \"input\" || tag === \"textarea\") {\r\n                this.handler = handleDefault;\r\n            }\r\n        }\r\n        //初始化\r\n        this.commit(value);\r\n    }\r\n    ModelDirective.prototype.commit = function (value) {\r\n        if (this.element instanceof _core_VNode_Control__WEBPACK_IMPORTED_MODULE_5__[\"default\"]) {\r\n            this.handler(this, this.element);\r\n        }\r\n        else {\r\n            if (this.init && (0,_shared_util_index__WEBPACK_IMPORTED_MODULE_0__.isEqual)(this.value, value)) {\r\n                ;\r\n            }\r\n            else {\r\n                this.value = value;\r\n                if (this.handler) {\r\n                    if (!this.init) {\r\n                        this.handler(this, this.element);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        this.init = true;\r\n    };\r\n    ModelDirective.prototype.destory = function () {\r\n        if (this.init) {\r\n            this.unWatch();\r\n            if (this.element instanceof _core_VNode_Control__WEBPACK_IMPORTED_MODULE_5__[\"default\"]) {\r\n            }\r\n            else {\r\n                this.events.forEach(function (args) {\r\n                    (0,_shared_util_index__WEBPACK_IMPORTED_MODULE_0__.apply)(_components_ux_dom_index__WEBPACK_IMPORTED_MODULE_3__.off, null, args);\r\n                });\r\n            }\r\n        }\r\n    };\r\n    return ModelDirective;\r\n}());\r\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (ModelDirective);\r\nfunction watch(model, element, prop) {\r\n    /**监听到绑定的值被更改后,给绑定的对象赋值方法 */\r\n    var set = model.set = (0,_shared_util_index__WEBPACK_IMPORTED_MODULE_0__.isFunction)(prop) ? prop : (0,_core_prototype_util_parseExpOrFn__WEBPACK_IMPORTED_MODULE_2__.parseSetExp)(prop, element);\r\n    var watchThis = element instanceof _core_VNode_Control__WEBPACK_IMPORTED_MODULE_5__[\"default\"] ? element : model.control;\r\n    model.unWatch = _core_prototype_$watch__WEBPACK_IMPORTED_MODULE_1__[\"default\"].call(watchThis, \r\n    // 监听绑定的值\r\n    (0,_core_prototype_util_parseExpOrFn__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(model.value, _core_observable_Observe__WEBPACK_IMPORTED_MODULE_4__[\"default\"].observeMap.get(model.control).proxy), \r\n    // 响应绑定值更改\r\n    function (value) { return set(value); }, { isCalledSelf: true });\r\n}\r\n/**\r\n * 添加监听事件\r\n * @param model\r\n * @param args\r\n */\r\nfunction addEvent(model) {\r\n    var args = [];\r\n    for (var _i = 1; _i < arguments.length; _i++) {\r\n        args[_i - 1] = arguments[_i];\r\n    }\r\n    model.events.push(args);\r\n    (0,_shared_util_index__WEBPACK_IMPORTED_MODULE_0__.apply)(_components_ux_dom_index__WEBPACK_IMPORTED_MODULE_3__.on, null, args);\r\n}\r\n/**\r\n * 对 input, texterea 元value素进行双向绑定\r\n * @param element\r\n * @param options\r\n */\r\nfunction handleDefault(model, element) {\r\n    watch(model, element, \"value\");\r\n    var input;\r\n    addEvent(model, element, \"compositionstart\", function () {\r\n        element.composing = true;\r\n    });\r\n    addEvent(model, element, \"compositionend\", function () {\r\n        if (!element.composing)\r\n            return;\r\n        element.composing = false;\r\n        input();\r\n    });\r\n    addEvent(model, element, \"input\", input = function () {\r\n        if (element.composing)\r\n            return;\r\n        //输入框中数据发生变化, 同步更新变量\r\n        _core_observable_Observe__WEBPACK_IMPORTED_MODULE_4__[\"default\"].observeMap.get(model.control).proxy[model.value] = element.value;\r\n    });\r\n}\r\n/**\r\n * 对 input[type=\"radio\"]元素进行双向绑定\r\n * @param model\r\n * @param element\r\n */\r\nfunction handlerRadio(model, element) {\r\n    //值变化 radio状态变化\r\n    watch(model, element, function (value) {\r\n        element.checked = value === (element.getAttribute('value') || null);\r\n    }),\r\n        //radio状态变化 带动值变化\r\n        addEvent(model, element, \"change\", function () {\r\n            _core_observable_Observe__WEBPACK_IMPORTED_MODULE_4__[\"default\"].observeMap.get(model.control).proxy[model.value] = element.value;\r\n        });\r\n}\r\n/**\r\n * 对 input[type=\"checkbox\"]元素进行双向绑定\r\n * @param model\r\n * @param element\r\n */\r\nfunction handlerCheckBox(model, element) {\r\n    watch(model, element, \"checked\");\r\n    addEvent(model, element, \"change\", function (e) {\r\n        (0,_core_prototype_util_parseExpOrFn__WEBPACK_IMPORTED_MODULE_2__.parseSetExp)(model.value, _core_observable_Observe__WEBPACK_IMPORTED_MODULE_4__[\"default\"].observeMap.get(model.control).proxy)(element.checked);\r\n    });\r\n}\r\nfunction handleControl(model, element) {\r\n    var _this = this;\r\n    /**创建当前model的属性对象 */\r\n    //TODO 可以不使用父到子的watch只使用AttributeCommitter即可\r\n    var controlProxy = _core_observable_Observe__WEBPACK_IMPORTED_MODULE_4__[\"default\"].observeMap.get(model.control).proxy;\r\n    if (model.attributes.has(\"value\")) {\r\n        model.attributes.get(\"value\").commit(controlProxy[model.value]);\r\n    }\r\n    else {\r\n        model.attributes.set(\"value\", new _directiveBase_attribute__WEBPACK_IMPORTED_MODULE_6__[\"default\"](\"value\", controlProxy[model.value], element));\r\n    }\r\n    /**外部变量变化后,自动传入内部更新子组件   父 -> 子 */\r\n    // watch(model, element, \"props.value\")\r\n    /**内部变量发生变化时,自动更新外部父组件  子 -> 父*/\r\n    if (!model.init) {\r\n        model.attributes.set(\"model\", new _directiveBase_attribute__WEBPACK_IMPORTED_MODULE_6__[\"default\"](\"model\", model.value, element));\r\n        element.$watch(\"props.value\", function (value) { return controlProxy[_this.value] = value; });\r\n    }\r\n}\r\n\n\n/***/ }),\n/* 19 */\n/***/ ((__unused_webpack_module, __webpack_exports__, __nested_webpack_require_113723__) => {\n\n__nested_webpack_require_113723__.r(__webpack_exports__);\n/* harmony export */ __nested_webpack_require_113723__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ $watch),\n/* harmony export */   \"watchMap\": () => (/* binding */ watchMap)\n/* harmony export */ });\n/* harmony import */ var _shared_util_index__WEBPACK_IMPORTED_MODULE_0__ = __nested_webpack_require_113723__(2);\n/* harmony import */ var _observable_Computed__WEBPACK_IMPORTED_MODULE_1__ = __nested_webpack_require_113723__(20);\n/* harmony import */ var _observable_Observe__WEBPACK_IMPORTED_MODULE_2__ = __nested_webpack_require_113723__(3);\n/* harmony import */ var _util_parseExpOrFn__WEBPACK_IMPORTED_MODULE_3__ = __nested_webpack_require_113723__(21);\n/* harmony import */ var _util_traverse__WEBPACK_IMPORTED_MODULE_4__ = __nested_webpack_require_113723__(22);\n\r\n\r\n\r\n\r\n\r\n/**存放每个实例的 watch 数据 */\r\nvar watchMap = new WeakMap();\r\nfunction $watch(expOrFn, callback, options) {\r\n    if ((0,_shared_util_index__WEBPACK_IMPORTED_MODULE_0__.isPlainObject)(callback)) {\r\n        return $watch.call(this, expOrFn, callback.handler, callback);\r\n    }\r\n    //获取当前调用的对象\r\n    var self = this || _shared_util_index__WEBPACK_IMPORTED_MODULE_0__.emptyObject;\r\n    var watchFu = (0,_util_parseExpOrFn__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(expOrFn, self);\r\n    var computedInstance;\r\n    if (!watchFu) {\r\n        return;\r\n    }\r\n    //当前实例到的 watch 相关数据\r\n    if (watchMap.has(self)) {\r\n        computedInstance = watchMap.get(self);\r\n    }\r\n    else {\r\n        watchMap.set(self, computedInstance = new _observable_Computed__WEBPACK_IMPORTED_MODULE_1__[\"default\"](self, true));\r\n    }\r\n    options = options || {};\r\n    /** 当前 watch 的计算属性容器对象 */\r\n    var computedInstanceTarget = computedInstance.target;\r\n    /**当前 watch 的计算属性容器的获取与修改拦截器 */\r\n    var computedInstanceTargetProxyInterceptor = computedInstance.targetProxyInterceptor;\r\n    /**当前 watch 的存储名称 */\r\n    var name = (0,_shared_util_index__WEBPACK_IMPORTED_MODULE_0__.uid)();\r\n    var deep = options.deep || false;\r\n    /**暂时无法判断是否是赋初值是否立即执行回调 */\r\n    // let immediate = options.immediate;\r\n    /** 值改变是否执行回调 */\r\n    var runCallback = options.isCalledSelf;\r\n    computedInstance.add(name, {\r\n        get: function () {\r\n            var oldValue = computedInstanceTarget[name];\r\n            var value = watchFu();\r\n            // 收集深度监听依赖\r\n            if (deep) {\r\n                (0,_util_traverse__WEBPACK_IMPORTED_MODULE_4__[\"default\"])(value, deep);\r\n            }\r\n            //转换为原始数据,防止内部修改触发刷新\r\n            value = (0,_shared_util_index__WEBPACK_IMPORTED_MODULE_0__.shallowCopy)(_observable_Observe__WEBPACK_IMPORTED_MODULE_2__[\"default\"].getOriginTarget(value));\r\n            if (runCallback) {\r\n                if (!(0,_shared_util_index__WEBPACK_IMPORTED_MODULE_0__.isEqual)(value, oldValue) || deep) { //immediate\r\n                    _observable_Observe__WEBPACK_IMPORTED_MODULE_2__.ToggleCollection.safety(function () {\r\n                        return callback.call(self, value, oldValue);\r\n                    });\r\n                }\r\n            }\r\n            return value;\r\n        }\r\n    });\r\n    //首次运行, 收集依赖\r\n    computedInstanceTargetProxyInterceptor[name];\r\n    runCallback = true;\r\n    // immediate = false;\r\n    //返回取消监听的方法\r\n    return function () {\r\n        computedInstance.delete(name);\r\n    };\r\n}\r\n\n\n/***/ }),\n/* 20 */\n/***/ ((__unused_webpack_module, __webpack_exports__, __nested_webpack_require_117092__) => {\n\n__nested_webpack_require_117092__.r(__webpack_exports__);\n/* harmony export */ __nested_webpack_require_117092__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _Observe__WEBPACK_IMPORTED_MODULE_0__ = __nested_webpack_require_117092__(3);\n/* harmony import */ var _shared_util_index__WEBPACK_IMPORTED_MODULE_1__ = __nested_webpack_require_117092__(2);\n/* harmony import */ var _Scheduler__WEBPACK_IMPORTED_MODULE_2__ = __nested_webpack_require_117092__(8);\n/* harmony import */ var _Watcher__WEBPACK_IMPORTED_MODULE_3__ = __nested_webpack_require_117092__(7);\n\r\n\r\n\r\n\r\n/**\r\n * 计算属性\r\n * 一个对象实例一个Computed对象\r\n */\r\nvar Computed = /** @class */ (function () {\r\n    function Computed(self, isWatch) {\r\n        this.optionsMap = new Map();\r\n        this.target = (0,_shared_util_index__WEBPACK_IMPORTED_MODULE_1__.create)(null);\r\n        //渲染watcher收集依赖的对象\r\n        this.targetProxy = _Observe__WEBPACK_IMPORTED_MODULE_0__[\"default\"].observe(this.target);\r\n        /** 当前计算属性容器的获取与修改拦截器 */\r\n        this.targetProxyInterceptor = new Proxy(this.targetProxy, {\r\n            get: computedTargetProxyInterceptorGet(this.optionsMap),\r\n            set: computedTargetProxyInterceptorSet(this.optionsMap),\r\n            deleteProperty: function () { return true; }\r\n        });\r\n        this.self = self;\r\n        this.isWatch = isWatch;\r\n        this.observeOptions = !isWatch && _Observe__WEBPACK_IMPORTED_MODULE_0__[\"default\"].observeMap.get(this.target);\r\n    }\r\n    /**\r\n     * 添加计算属性\r\n     * @param name 计算属性名称\r\n     * @param computed 计算属性 getter/setter 对象\r\n     */\r\n    Computed.prototype.add = function (name, computed) {\r\n        var _a = this, self = _a.self, isWatch = _a.isWatch, optionsMap = _a.optionsMap, target = _a.target, targetProxy = _a.targetProxy, observeOptions = _a.observeOptions;\r\n        /** 计算属性的 setter */\r\n        var set = (computed.set || _shared_util_index__WEBPACK_IMPORTED_MODULE_1__.noop).bind(self);\r\n        /** 计算属性的 getter */\r\n        var get = computed.get.bind(self);\r\n        /** 计算属性的 watcher */\r\n        var watcher = new _Watcher__WEBPACK_IMPORTED_MODULE_3__[\"default\"](self, function () {\r\n            if (isWatch)\r\n                return (target[name] = get());\r\n            //如果是计算属性 需要触发更新\r\n            return (targetProxy[name] = get(self));\r\n        }, true);\r\n        // 存储计算属性参数\r\n        optionsMap.set(name, {\r\n            watcher: watcher,\r\n            set: set\r\n        });\r\n    };\r\n    Computed.prototype.delete = function (name) {\r\n        var options = this.optionsMap.get(name);\r\n        if (options) {\r\n            var watch = options.watcher;\r\n            watch.clean();\r\n            this.optionsMap.delete(name);\r\n            //如果当前 计算属性 在异步更新队列中,则进行删除\r\n            if (_Scheduler__WEBPACK_IMPORTED_MODULE_2__.queueMap.has(watch)) {\r\n                _Scheduler__WEBPACK_IMPORTED_MODULE_2__.queueMap[\"delete\"](watch);\r\n                for (var i = _Scheduler__WEBPACK_IMPORTED_MODULE_2__.index, len = _Scheduler__WEBPACK_IMPORTED_MODULE_2__.queue.length; i < len; i++) {\r\n                    if (_Scheduler__WEBPACK_IMPORTED_MODULE_2__.queue[i] === watch) {\r\n                        _Scheduler__WEBPACK_IMPORTED_MODULE_2__.queue.splice(i, 1);\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * 清空计算属性\r\n     */\r\n    Computed.prototype.clean = function () {\r\n        for (var _i = 0, _a = this.optionsMap; _i < _a.length; _i++) {\r\n            var name_1 = _a[_i][0];\r\n            this.delete(name_1);\r\n        }\r\n    };\r\n    return Computed;\r\n}());\r\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Computed);\r\n/**\r\n * 计算属性容器get拦截器\r\n * @param optionsMap\r\n * @returns\r\n */\r\nfunction computedTargetProxyInterceptorGet(optionsMap) {\r\n    return function (target, name) {\r\n        // 获取计算属性的参数\r\n        var options = optionsMap.get(name);\r\n        if (options) {\r\n            var watcher = options.watcher;\r\n            if (!watcher.isInit || watcher.shouldUpdate) {\r\n                watcher.getValue();\r\n            }\r\n        }\r\n        return target[name];\r\n    };\r\n}\r\n/**\r\n * 计算属性容器set拦截器\r\n * @param optionsMap\r\n * @returns\r\n */\r\nfunction computedTargetProxyInterceptorSet(optionsMap) {\r\n    return function (target, name, value) {\r\n        // 获取计算属性的参数\r\n        var options = optionsMap.get(name);\r\n        if (options) {\r\n            options.set(value);\r\n            return true;\r\n        }\r\n        return true;\r\n    };\r\n}\r\n\n\n/***/ }),\n/* 21 */\n/***/ ((__unused_webpack_module, __webpack_exports__, __nested_webpack_require_121668__) => {\n\n__nested_webpack_require_121668__.r(__webpack_exports__);\n/* harmony export */ __nested_webpack_require_121668__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ parseExpOrFn),\n/* harmony export */   \"parseSetExp\": () => (/* binding */ parseSetExp)\n/* harmony export */ });\n/* harmony import */ var _shared_util_index__WEBPACK_IMPORTED_MODULE_0__ = __nested_webpack_require_121668__(2);\n\r\n/**\r\n * 解析 watch 中的值 字符串则定位到当前对象内的数据,方法则直接使用方法\r\n * @param expOrFn\r\n * @param self\r\n * @returns\r\n */\r\nfunction parseExpOrFn(expOrFn, self) {\r\n    if ((0,_shared_util_index__WEBPACK_IMPORTED_MODULE_0__.isString)(expOrFn)) {\r\n        var segments_1 = expOrFn.split('.');\r\n        return function () {\r\n            var obj = this;\r\n            for (var _i = 0, segments_2 = segments_1; _i < segments_2.length; _i++) {\r\n                var segment = segments_2[_i];\r\n                if (!obj)\r\n                    return;\r\n                obj = obj[segment];\r\n            }\r\n            return obj;\r\n        }.bind(self);\r\n    }\r\n    else {\r\n        return expOrFn.bind(self);\r\n    }\r\n}\r\nfunction parseSetExp(exp, self) {\r\n    var segments = exp.split('.');\r\n    if (segments.length === 1)\r\n        return function (value) { self[exp] = value; };\r\n    if (segments.length === 2)\r\n        return function (value) { self[segments[0]][segments[1]] = value; };\r\n}\r\n\n\n/***/ }),\n/* 22 */\n/***/ ((__unused_webpack_module, __webpack_exports__, __nested_webpack_require_123104__) => {\n\n__nested_webpack_require_123104__.r(__webpack_exports__);\n/* harmony export */ __nested_webpack_require_123104__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _core_observable_Observe__WEBPACK_IMPORTED_MODULE_0__ = __nested_webpack_require_123104__(3);\n\r\nvar hasTraverse = new Set();\r\nfunction traverse(value, deep) {\r\n    var options = _core_observable_Observe__WEBPACK_IMPORTED_MODULE_0__[\"default\"].observeProxyMap.get(value);\r\n    if (options) {\r\n        if (hasTraverse.has(value))\r\n            return;\r\n        hasTraverse.add(value);\r\n        if (deep) {\r\n            //进行遍历 对象添加监听\r\n            if (options.isArray) {\r\n                value.forEach(function (_value) { return traverse(_value, deep); });\r\n            }\r\n            else {\r\n                Object.keys(value).forEach(function (key) {\r\n                    traverse(value[key], deep);\r\n                });\r\n            }\r\n        }\r\n        else {\r\n            options.deepSubs.add(_core_observable_Observe__WEBPACK_IMPORTED_MODULE_0__.ToggleCollection.target);\r\n        }\r\n    }\r\n}\r\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (function (value, deep) {\r\n    traverse(value, deep);\r\n    hasTraverse.clear();\r\n});\r\n\n\n/***/ }),\n/* 23 */\n/***/ ((__unused_webpack_module, __webpack_exports__, __nested_webpack_require_124467__) => {\n\n__nested_webpack_require_124467__.r(__webpack_exports__);\n/* harmony export */ __nested_webpack_require_124467__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _shared_util_index__WEBPACK_IMPORTED_MODULE_0__ = __nested_webpack_require_124467__(2);\n/* harmony import */ var _core_observable_Observe__WEBPACK_IMPORTED_MODULE_1__ = __nested_webpack_require_124467__(3);\n/* harmony import */ var _shared_const_observeReadOnlyOps__WEBPACK_IMPORTED_MODULE_2__ = __nested_webpack_require_124467__(24);\n\r\n\r\n\r\nvar AttributeCommitter = /** @class */ (function () {\r\n    function AttributeCommitter(key, value, control) {\r\n        this.key = key;\r\n        this.value = value;\r\n        this.control = control;\r\n        this.init = false;\r\n        this.commit(value);\r\n    }\r\n    AttributeCommitter.prototype.commit = function (value) {\r\n        if (!this.init || !(0,_shared_util_index__WEBPACK_IMPORTED_MODULE_0__.isEqual)(value, this.value)) {\r\n            value = _core_observable_Observe__WEBPACK_IMPORTED_MODULE_1__[\"default\"].observeProxyMap.has(value) ? _core_observable_Observe__WEBPACK_IMPORTED_MODULE_1__[\"default\"].observeProxyMap.get(value).target : value;\r\n            (0,_shared_const_observeReadOnlyOps__WEBPACK_IMPORTED_MODULE_2__.setValueByReadOnly)(this.control.props, this.key, value);\r\n            this.value = value;\r\n            this.init = true;\r\n        }\r\n    };\r\n    //TODO 销毁时删除依赖的收集等信息\r\n    AttributeCommitter.prototype.destory = function () {\r\n    };\r\n    return AttributeCommitter;\r\n}());\r\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (AttributeCommitter);\r\n\n\n/***/ }),\n/* 24 */\n/***/ ((__unused_webpack_module, __webpack_exports__, __nested_webpack_require_126191__) => {\n\n__nested_webpack_require_126191__.r(__webpack_exports__);\n/* harmony export */ __nested_webpack_require_126191__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   \"getValueByReadOnly\": () => (/* binding */ getValueByReadOnly),\n/* harmony export */   \"setValueByReadOnly\": () => (/* binding */ setValueByReadOnly)\n/* harmony export */ });\n/* harmony import */ var _core_observable_Observe__WEBPACK_IMPORTED_MODULE_0__ = __nested_webpack_require_126191__(3);\n/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_1__ = __nested_webpack_require_126191__(2);\n\r\n\r\n\r\n/**\r\n * 使观察者对象只读 ( 不可删, 不可写(model属性除外) )\r\n */\r\nvar options = function () { return 0; };\r\nvar propsSetOptions = function (target, name) {\r\n    if (name === \"value\" && (0,_util__WEBPACK_IMPORTED_MODULE_1__.has)(target, \"model\")) {\r\n        return null;\r\n    }\r\n    return 0;\r\n};\r\nvar dataReadOnlyOptions = {\r\n    set: {\r\n        before: propsSetOptions\r\n    },\r\n    deleteProperty: {\r\n        before: options\r\n    }\r\n};\r\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (dataReadOnlyOptions);\r\n/**\r\n * 内部修改只读对象后触发更新\r\n * 将 propsState 修改为true\r\n * @param target\r\n * @param name\r\n * @param value\r\n */\r\nfunction setValueByReadOnly(targetProxy, name, value) {\r\n    if (_core_observable_Observe__WEBPACK_IMPORTED_MODULE_0__[\"default\"].observeProxyMap.has(targetProxy)) {\r\n        var _a = _core_observable_Observe__WEBPACK_IMPORTED_MODULE_0__[\"default\"].observeProxyMap.get(targetProxy), subs = _a.subs, deepSubs = _a.deepSubs, lastValue = _a.lastValue, isArray = _a.isArray, target = _a.target;\r\n        //写入值并触发更新\r\n        (0,_core_observable_Observe__WEBPACK_IMPORTED_MODULE_0__.observerProxySetValue)(subs, deepSubs, lastValue, isArray, target, name, value, targetProxy);\r\n    }\r\n}\r\nfunction getValueByReadOnly(target, name) {\r\n    if (_core_observable_Observe__WEBPACK_IMPORTED_MODULE_0__[\"default\"].observeProxyMap.has(target)) {\r\n        var _a = _core_observable_Observe__WEBPACK_IMPORTED_MODULE_0__[\"default\"].observeProxyMap.get(target), subs = _a.subs, deepSubs = _a.deepSubs, lastValue = _a.lastValue;\r\n        var value = target[name];\r\n        var watcher = _core_observable_Observe__WEBPACK_IMPORTED_MODULE_0__.ToggleCollection.target;\r\n        if (watcher) {\r\n            //添加订阅信息\r\n            deepSubs.has(watcher) || watcher.add(subs, name);\r\n            //存储本次值\r\n            lastValue[name] = value;\r\n        }\r\n    }\r\n}\r\n\n\n/***/ }),\n/* 25 */\n/***/ ((__unused_webpack_module, __webpack_exports__, __nested_webpack_require_128715__) => {\n\n__nested_webpack_require_128715__.r(__webpack_exports__);\n/* harmony export */ __nested_webpack_require_128715__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _shared_util_index__WEBPACK_IMPORTED_MODULE_0__ = __nested_webpack_require_128715__(2);\n\r\nvar TextDirective = /** @class */ (function () {\r\n    function TextDirective(element) {\r\n    }\r\n    TextDirective.prototype.commit = function (value, isDirectiveFn) {\r\n        if (isDirectiveFn)\r\n            return value(this);\r\n        if (!this.value || !(0,_shared_util_index__WEBPACK_IMPORTED_MODULE_0__.isEqual)(this.value, value)) {\r\n        }\r\n    };\r\n    return TextDirective;\r\n}());\r\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (TextDirective);\r\n\n\n/***/ }),\n/* 26 */\n/***/ ((__unused_webpack_module, __webpack_exports__, __nested_webpack_require_129597__) => {\n\n__nested_webpack_require_129597__.r(__webpack_exports__);\n/* harmony export */ __nested_webpack_require_129597__.d(__webpack_exports__, {\n/* harmony export */   \"getControlValue\": () => (/* binding */ getControlValue),\n/* harmony export */   \"setControlValue\": () => (/* binding */ setControlValue)\n/* harmony export */ });\n/* harmony import */ var _observable_Observe__WEBPACK_IMPORTED_MODULE_0__ = __nested_webpack_require_129597__(3);\n\r\nfunction setControlValue(targetProxy, key, value) {\r\n    var observeOptions = _observable_Observe__WEBPACK_IMPORTED_MODULE_0__[\"default\"].observeProxyMap.get(targetProxy);\r\n    if (observeOptions) {\r\n        observeOptions.target[key] = value;\r\n    }\r\n}\r\nfunction getControlValue(targetProxy, key) {\r\n    var observeOptions = _observable_Observe__WEBPACK_IMPORTED_MODULE_0__[\"default\"].observeProxyMap.get(targetProxy);\r\n    if (observeOptions) {\r\n        return observeOptions.target[key];\r\n    }\r\n    return undefined;\r\n}\r\n\n\n/***/ }),\n/* 27 */\n/***/ ((__unused_webpack_module, __webpack_exports__, __nested_webpack_require_130622__) => {\n\n__nested_webpack_require_130622__.r(__webpack_exports__);\n/* harmony export */ __nested_webpack_require_130622__.d(__webpack_exports__, {\n/* harmony export */   \"addCacheMth\": () => (/* binding */ addCacheMth),\n/* harmony export */   \"execMountedMth\": () => (/* binding */ execMountedMth),\n/* harmony export */   \"execWillMountMth\": () => (/* binding */ execWillMountMth)\n/* harmony export */ });\n/* harmony import */ var _util_modifyControlValue__WEBPACK_IMPORTED_MODULE_0__ = __nested_webpack_require_130622__(26);\n\r\n//缓存待执行WillMount 和 Mounted的组件\r\nvar componentNeedMountList = [], hasWillMountedList = [];\r\n//添加缓存组件\r\nfunction addCacheMth(self) {\r\n    componentNeedMountList.push(self);\r\n}\r\nfunction execMountedMth(self) {\r\n    if (componentNeedMountList.indexOf(self) === -1) {\r\n        hasWillMountedList.indexOf(self) !== -1 && hasWillMountedList.splice(hasWillMountedList.indexOf(self), 1);\r\n        if (!self.$mounted) {\r\n            (0,_util_modifyControlValue__WEBPACK_IMPORTED_MODULE_0__.setControlValue)(self, '$mounted', true);\r\n            self.componentMounted();\r\n        }\r\n    }\r\n    else {\r\n        while (componentNeedMountList.length > 0) {\r\n            var comp = componentNeedMountList.pop();\r\n            hasWillMountedList.indexOf(comp) !== -1 && hasWillMountedList.splice(hasWillMountedList.indexOf(comp), 1);\r\n            if (!comp.$mounted) {\r\n                (0,_util_modifyControlValue__WEBPACK_IMPORTED_MODULE_0__.setControlValue)(comp, '$mounted', true);\r\n                comp.componentMounted();\r\n            }\r\n            if (comp === self)\r\n                break;\r\n        }\r\n    }\r\n}\r\n/**\r\n * 执行缓存了的 componentWillMount 函数\r\n * @param self\r\n */\r\nfunction execWillMountMth(self) {\r\n    if (self && componentNeedMountList.indexOf(self) === -1 && !self.$mounted) {\r\n        self.componentWillMount();\r\n        hasWillMountedList.push(self);\r\n    }\r\n    var index = 0;\r\n    for (; index < componentNeedMountList.length; index++) {\r\n        var comp = componentNeedMountList[index];\r\n        if (hasWillMountedList.indexOf(comp) === -1 && !comp.$mounted) {\r\n            comp.componentWillMount();\r\n            hasWillMountedList.push(comp);\r\n        }\r\n    }\r\n}\r\n\n\n/***/ }),\n/* 28 */\n/***/ ((__unused_webpack_module, __webpack_exports__, __nested_webpack_require_132873__) => {\n\n__nested_webpack_require_132873__.r(__webpack_exports__);\n/* harmony export */ __nested_webpack_require_132873__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ initOptions)\n/* harmony export */ });\n/* harmony import */ var _core_observable_Observe__WEBPACK_IMPORTED_MODULE_0__ = __nested_webpack_require_132873__(3);\n/* harmony import */ var _shared_util_index__WEBPACK_IMPORTED_MODULE_1__ = __nested_webpack_require_132873__(2);\n/* harmony import */ var _shared_const_observeReadOnlyOps__WEBPACK_IMPORTED_MODULE_2__ = __nested_webpack_require_132873__(24);\n/* harmony import */ var _util_injectionPrivateToInstance__WEBPACK_IMPORTED_MODULE_3__ = __nested_webpack_require_132873__(29);\n\r\n\r\n\r\n\r\n/**\r\n * 往实例选项中添加 $options(创建的数据) 和 $info 信息\r\n * @param isCustomElement\r\n * @param target\r\n * @param root\r\n * @param name\r\n */\r\nfunction initOptions(target, name) {\r\n    var elementId = \"\".concat(name, \"-\").concat((0,_shared_util_index__WEBPACK_IMPORTED_MODULE_1__.uid)());\r\n    /**实例信息 */\r\n    var $info = _core_observable_Observe__WEBPACK_IMPORTED_MODULE_0__[\"default\"].observe({\r\n        /**当前实例的UID */\r\n        uid: elementId,\r\n        /**当前自定义元素的名称 */\r\n        name: name,\r\n        /**存储关联元素 */\r\n        _elem: undefined,\r\n        /**当前组件关联的虚拟节点 */\r\n        vNode: undefined,\r\n        /**当时实例的首次挂载是否已完成 */\r\n        isMounted: false,\r\n        /**当前自定义元素是否在文档流中 */\r\n        isConnected: false\r\n    }, _shared_const_observeReadOnlyOps__WEBPACK_IMPORTED_MODULE_2__[\"default\"]);\r\n    (0,_util_injectionPrivateToInstance__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(target, { $info: $info });\r\n}\r\n\n\n/***/ }),\n/* 29 */\n/***/ ((__unused_webpack_module, __webpack_exports__, __nested_webpack_require_134509__) => {\n\n__nested_webpack_require_134509__.r(__webpack_exports__);\n/* harmony export */ __nested_webpack_require_134509__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/**\r\n * 在实例和自定义元素上建立内部对象的引用\r\n */\r\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (function (target, data) {\r\n    Object.keys(data).forEach(function (key) {\r\n        //实例上直接写入, 常规操作有观察者对象进行拦截\r\n        target[key] = data[key];\r\n    });\r\n});\r\n\n\n/***/ }),\n/* 30 */\n/***/ ((__unused_webpack_module, __webpack_exports__, __nested_webpack_require_135072__) => {\n\n__nested_webpack_require_135072__.r(__webpack_exports__);\n/* harmony export */ __nested_webpack_require_135072__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ initProps)\n/* harmony export */ });\n/* harmony import */ var _core_observable_Observe__WEBPACK_IMPORTED_MODULE_0__ = __nested_webpack_require_135072__(3);\n/* harmony import */ var _shared_util_index__WEBPACK_IMPORTED_MODULE_1__ = __nested_webpack_require_135072__(2);\n/* harmony import */ var _util_injectionToInstance__WEBPACK_IMPORTED_MODULE_2__ = __nested_webpack_require_135072__(31);\n/* harmony import */ var _shared_const_observeReadOnlyOps__WEBPACK_IMPORTED_MODULE_3__ = __nested_webpack_require_135072__(24);\n\r\n\r\n\r\n\r\n/**\r\n * 初始化当前组件 props 属性\r\n * @param target\r\n * @param props\r\n * @param targetProxy\r\n */\r\nfunction initProps(target, targetProxy) {\r\n    //存储所有props的值\r\n    var propsTarget = (0,_shared_util_index__WEBPACK_IMPORTED_MODULE_1__.create)(null);\r\n    var propStateProxy = _core_observable_Observe__WEBPACK_IMPORTED_MODULE_0__[\"default\"].observe(propsTarget, _shared_const_observeReadOnlyOps__WEBPACK_IMPORTED_MODULE_3__[\"default\"]);\r\n    //获取所有props(只读)\r\n    (0,_util_injectionToInstance__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(target, \"props\", {\r\n        get: function () {\r\n            return propStateProxy;\r\n        }\r\n    });\r\n}\r\n\n\n/***/ }),\n/* 31 */\n/***/ ((__unused_webpack_module, __webpack_exports__, __nested_webpack_require_136437__) => {\n\n__nested_webpack_require_136437__.r(__webpack_exports__);\n/* harmony export */ __nested_webpack_require_136437__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _shared_util_index__WEBPACK_IMPORTED_MODULE_0__ = __nested_webpack_require_136437__(2);\n\r\n/**\r\n * 在实例和自定义元素上建立对象的引用\r\n */\r\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (function (target, key, attributes) {\r\n    var keyIsString = (0,_shared_util_index__WEBPACK_IMPORTED_MODULE_0__.isString)(key);\r\n    if (keyIsString && (0,_shared_util_index__WEBPACK_IMPORTED_MODULE_0__.isReserved)(key)) {\r\n        return;\r\n    }\r\n    //实例中存在同名变量,则删除\r\n    (0,_shared_util_index__WEBPACK_IMPORTED_MODULE_0__.has)(target, key) && delete target[key];\r\n    //在实例中添加变量映射\r\n    (0,_shared_util_index__WEBPACK_IMPORTED_MODULE_0__.defineProperty)(target, key, attributes);\r\n});\r\n\n\n/***/ }),\n/* 32 */\n/***/ ((__unused_webpack_module, __webpack_exports__, __nested_webpack_require_137427__) => {\n\n__nested_webpack_require_137427__.r(__webpack_exports__);\n/* harmony export */ __nested_webpack_require_137427__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ initMethods)\n/* harmony export */ });\n/* harmony import */ var _shared_util_index__WEBPACK_IMPORTED_MODULE_0__ = __nested_webpack_require_137427__(2);\n/* harmony import */ var _util_injectionToInstance__WEBPACK_IMPORTED_MODULE_1__ = __nested_webpack_require_137427__(31);\n\r\n\r\n/**\r\n * 绑定methods内部this指向,并且绑定到target\r\n * @param isCustomElement\r\n * @param target\r\n * @param root\r\n * @param methods\r\n * @param targetProxy\r\n */\r\nfunction initMethods(target, methods, targetProxy) {\r\n    // $methods 实例属性,非相应式,会在实例上添加方法的副本\r\n    var methodsTarget = (0,_shared_util_index__WEBPACK_IMPORTED_MODULE_0__.create)(null);\r\n    if (methods) {\r\n        Object.keys(methods).forEach(function (name) {\r\n            //将 method 方法中this指向当前实例\r\n            var method = methodsTarget[name] = methods[name].bind(targetProxy);\r\n            (0,_util_injectionToInstance__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(target, name, {\r\n                writable: true,\r\n                value: method\r\n            });\r\n        });\r\n    }\r\n}\r\n\n\n/***/ }),\n/* 33 */\n/***/ ((__unused_webpack_module, __webpack_exports__, __nested_webpack_require_138672__) => {\n\n__nested_webpack_require_138672__.r(__webpack_exports__);\n/* harmony export */ __nested_webpack_require_138672__.d(__webpack_exports__, {\n/* harmony export */   \"computedMap\": () => (/* binding */ computedMap),\n/* harmony export */   \"default\": () => (/* binding */ initComputed)\n/* harmony export */ });\n/* harmony import */ var _core_observable_Computed__WEBPACK_IMPORTED_MODULE_0__ = __nested_webpack_require_138672__(20);\n/* harmony import */ var _util_injectionToInstance__WEBPACK_IMPORTED_MODULE_1__ = __nested_webpack_require_138672__(31);\n/* harmony import */ var _util_injectionPrivateToInstance__WEBPACK_IMPORTED_MODULE_2__ = __nested_webpack_require_138672__(29);\n/* harmony import */ var _shared_util_index__WEBPACK_IMPORTED_MODULE_3__ = __nested_webpack_require_138672__(2);\n/* harmony import */ var _core_observable_Observe__WEBPACK_IMPORTED_MODULE_4__ = __nested_webpack_require_138672__(3);\n/* harmony import */ var _shared_const_observeReadOnlyOps__WEBPACK_IMPORTED_MODULE_5__ = __nested_webpack_require_138672__(24);\n\r\n\r\n\r\n\r\n\r\n\r\n/**\r\n * 存放每个实例的 computed 相关数据\r\n */\r\nvar computedMap = new WeakMap();\r\n/**\r\n * 空计算属性\r\n */\r\nvar emptyComputed;\r\nfunction initComputed(target, options, targetProxy) {\r\n    var computeds = options.computed;\r\n    if ((0,_shared_util_index__WEBPACK_IMPORTED_MODULE_3__.isEmptyObject)(computeds)) {\r\n        return (0,_util_injectionPrivateToInstance__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(target, {\r\n            $computed: emptyComputed || (emptyComputed = _core_observable_Observe__WEBPACK_IMPORTED_MODULE_4__[\"default\"].observe({}, _shared_const_observeReadOnlyOps__WEBPACK_IMPORTED_MODULE_5__[\"default\"]))\r\n        });\r\n    }\r\n    var computedInstance = new _core_observable_Computed__WEBPACK_IMPORTED_MODULE_0__[\"default\"](targetProxy, false);\r\n    var computedInstanceTargetProxyInterceptor = computedInstance.targetProxyInterceptor;\r\n    // 存储当前实例 computed 相关数据\r\n    computedMap.set(targetProxy, computedInstance);\r\n    Object.keys(computeds).forEach(function (name) {\r\n        computedInstance.add(name, computeds[name]);\r\n        //将计算属性挂载到target, 通过Observe访问时因存在set,所以\r\n        (0,_util_injectionToInstance__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(target, name, {\r\n            get: function () { return computedInstanceTargetProxyInterceptor[name]; },\r\n            set: function (value) { return (computedInstanceTargetProxyInterceptor[name] = value); }\r\n        });\r\n    });\r\n    //将$computed注入到target中\r\n    (0,_util_injectionPrivateToInstance__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(target, {\r\n        $computed: computedInstanceTargetProxyInterceptor\r\n    });\r\n}\r\n\n\n/***/ }),\n/* 34 */\n/***/ ((__unused_webpack_module, __webpack_exports__, __nested_webpack_require_141282__) => {\n\n__nested_webpack_require_141282__.r(__webpack_exports__);\n/* harmony export */ __nested_webpack_require_141282__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ initWatch)\n/* harmony export */ });\n/* harmony import */ var _shared_util_index__WEBPACK_IMPORTED_MODULE_0__ = __nested_webpack_require_141282__(2);\n\r\nfunction createWatch(expOrFn, watchOptions, targetProxy) {\r\n    if ((0,_shared_util_index__WEBPACK_IMPORTED_MODULE_0__.isArray)(watchOptions)) {\r\n        for (var _i = 0, watchOptions_1 = watchOptions; _i < watchOptions_1.length; _i++) {\r\n            var handle = watchOptions_1[_i];\r\n            createWatch(expOrFn, handle, targetProxy);\r\n        }\r\n    }\r\n    else if ((0,_shared_util_index__WEBPACK_IMPORTED_MODULE_0__.isPlainObject)(watchOptions) || (0,_shared_util_index__WEBPACK_IMPORTED_MODULE_0__.isFunction)(watchOptions)) {\r\n        targetProxy.$watch(expOrFn, watchOptions);\r\n    }\r\n}\r\n//watch 初始化\r\nfunction initWatch(target, options, targetProxy) {\r\n    if (!options.watch) {\r\n        return;\r\n    }\r\n    Object.keys(options.watch).forEach(function (expOrFn) {\r\n        createWatch(expOrFn, options.watch[expOrFn], targetProxy);\r\n    });\r\n}\r\n\n\n/***/ }),\n/* 35 */\n/***/ ((__unused_webpack_module, __webpack_exports__, __nested_webpack_require_142541__) => {\n\n__nested_webpack_require_142541__.r(__webpack_exports__);\n/* harmony export */ __nested_webpack_require_142541__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ $destory)\n/* harmony export */ });\n/* harmony import */ var _$watch__WEBPACK_IMPORTED_MODULE_0__ = __nested_webpack_require_142541__(19);\n/* harmony import */ var _static_define_init_initComputed__WEBPACK_IMPORTED_MODULE_1__ = __nested_webpack_require_142541__(33);\n/* harmony import */ var _init_initForceUpdate__WEBPACK_IMPORTED_MODULE_2__ = __nested_webpack_require_142541__(6);\n\r\n\r\n\r\nfunction $destory() {\r\n    this.componentWillDestory();\r\n    //注销实例所有计算属性和watch数据\r\n    removeComputed(_$watch__WEBPACK_IMPORTED_MODULE_0__.watchMap, this);\r\n    removeComputed(_static_define_init_initComputed__WEBPACK_IMPORTED_MODULE_1__.computedMap, this);\r\n    //移除 render 方法收集到的依赖\r\n    removeRenderDeps(this);\r\n    this.componentDestoryed();\r\n}\r\nfunction removeComputed(optionsMap, self) {\r\n    optionsMap.has(self) && optionsMap.get(self).clean();\r\n}\r\n/**\r\n * 移除 render 方法收集到的依赖\r\n * @param targetProxy\r\n */\r\nfunction removeRenderDeps(targetProxy) {\r\n    var watch = _init_initForceUpdate__WEBPACK_IMPORTED_MODULE_2__.renderWatcherCache.get(targetProxy);\r\n    if (watch) {\r\n        watch.clean();\r\n    }\r\n}\r\n\n\n/***/ }),\n/* 36 */\n/***/ ((__unused_webpack_module, __webpack_exports__, __nested_webpack_require_143865__) => {\n\n__nested_webpack_require_143865__.r(__webpack_exports__);\n/* harmony export */ __nested_webpack_require_143865__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ $cloneNode)\n/* harmony export */ });\n/* harmony import */ var _shared_util__WEBPACK_IMPORTED_MODULE_0__ = __nested_webpack_require_143865__(2);\n\r\nfunction $cloneNode(element, props) {\r\n    var _a;\r\n    var children = [];\r\n    for (var _i = 2; _i < arguments.length; _i++) {\r\n        children[_i - 2] = arguments[_i];\r\n    }\r\n    if (props) {\r\n        if (!element.props)\r\n            element.props = {};\r\n        Object.keys(props).forEach(function (prop) {\r\n            if (element.props[prop] && (0,_shared_util__WEBPACK_IMPORTED_MODULE_0__.isFunction)(props[prop])) {\r\n                element.props[prop] = [element.props[prop], props[prop]];\r\n            }\r\n            else {\r\n                element.props[prop] = props[prop];\r\n            }\r\n        });\r\n    }\r\n    if (children.length) {\r\n        children = children.filter(function (child) { return !!child; });\r\n        (_a = element.children).push.apply(_a, children);\r\n    }\r\n    return element;\r\n}\r\n\n\n/***/ }),\n/* 37 */\n/***/ ((__unused_webpack_module, __webpack_exports__, __nested_webpack_require_145080__) => {\n\n__nested_webpack_require_145080__.r(__webpack_exports__);\n/* harmony export */ __nested_webpack_require_145080__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ componentFactory)\n/* harmony export */ });\nfunction componentFactory(Component, options) {\r\n    if (options === void 0) { options = {}; }\r\n    options.name = options.name || Component.name;\r\n    var proto = Component.prototype;\r\n    Object.getOwnPropertyNames(proto).forEach(function (key) {\r\n        if (key === 'constructor') {\r\n            return;\r\n        }\r\n        var descriptor = Object.getOwnPropertyDescriptor(proto, key);\r\n        if (descriptor.value) {\r\n            if (typeof descriptor.value === 'function') {\r\n                (options.methods || (options.methods = {}))[key] = descriptor.value;\r\n            }\r\n            else {\r\n                (options.dataList || (options.dataList = [])).push(function () {\r\n                    var _a;\r\n                    return _a = {}, _a[key] = descriptor.value, _a;\r\n                });\r\n            }\r\n        }\r\n        else if (descriptor.get || descriptor.set) {\r\n            //计算属性\r\n            (options.computed || (options.computed = {}))[key] = {\r\n                get: descriptor.get,\r\n                set: descriptor.set\r\n            };\r\n        }\r\n    });\r\n    //props\r\n    var decorators = Component.__decorators__;\r\n    if (decorators) {\r\n        decorators.forEach(function (fn) { return fn(options); });\r\n        delete Component.__decorators__;\r\n    }\r\n    // const superProto = Object.getPrototypeOf(proto);\r\n    Component.prototype.$options = options;\r\n}\r\n\n\n/***/ }),\n/* 38 */\n/***/ ((__unused_webpack_module, __webpack_exports__, __nested_webpack_require_146780__) => {\n\n__nested_webpack_require_146780__.r(__webpack_exports__);\n/* harmony export */ __nested_webpack_require_146780__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ bind)\n/* harmony export */ });\nfunction bind(selector) {\r\n    return function (target, propertyName) {\r\n        Object.defineProperty(target, propertyName, {\r\n            //根据css选择器获取组件中的控件节点  \r\n            get: function () {\r\n                return this.find(selector);\r\n            }\r\n        });\r\n    };\r\n}\r\n\n\n/***/ }),\n/* 39 */\n/***/ ((__unused_webpack_module, __webpack_exports__, __nested_webpack_require_147358__) => {\n\n__nested_webpack_require_147358__.r(__webpack_exports__);\n/* harmony export */ __nested_webpack_require_147358__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ Watch)\n/* harmony export */ });\n/* harmony import */ var _shared_util_index__WEBPACK_IMPORTED_MODULE_0__ = __nested_webpack_require_147358__(2);\n/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_1__ = __nested_webpack_require_147358__(40);\n\r\n\r\nfunction Watch(path, options) {\r\n    if (options === void 0) { options = {}; }\r\n    return (0,_util__WEBPACK_IMPORTED_MODULE_1__.createDecorator)(function (componentOptions, handler) {\r\n        if (typeof componentOptions.watch !== 'object') {\r\n            componentOptions.watch = (0,_shared_util_index__WEBPACK_IMPORTED_MODULE_0__.create)(null);\r\n        }\r\n        var watch = componentOptions.watch;\r\n        if (typeof watch[path] === 'object' && !(0,_shared_util_index__WEBPACK_IMPORTED_MODULE_0__.isArray)(watch[path])) {\r\n            watch[path] = [watch[path]];\r\n        }\r\n        else if (typeof watch[path] === 'undefined') {\r\n            watch[path] = [];\r\n        }\r\n        watch[path].push({\r\n            //这里的 this 在哪里调用的this就是谁\r\n            handler: function () { return (0,_shared_util_index__WEBPACK_IMPORTED_MODULE_0__.apply)(this[handler], this, arguments); },\r\n            deep: options.deep || false,\r\n            // immediate: options.immediate || false,\r\n            isCalledSelf: false\r\n        });\r\n    });\r\n}\r\n\n\n/***/ }),\n/* 40 */\n/***/ ((__unused_webpack_module, __webpack_exports__, __nested_webpack_require_148886__) => {\n\n__nested_webpack_require_148886__.r(__webpack_exports__);\n/* harmony export */ __nested_webpack_require_148886__.d(__webpack_exports__, {\n/* harmony export */   \"createDecorator\": () => (/* binding */ createDecorator)\n/* harmony export */ });\nfunction createDecorator(factory) {\r\n    return function (target, key) {\r\n        var Ctor = typeof target === 'function' ? target : target.constructor;\r\n        if (!Ctor.__decorators__) {\r\n            Ctor.__decorators__ = [];\r\n        }\r\n        Ctor.__decorators__.push(function (options) { return factory(options, key); });\r\n    };\r\n}\r\n\n\n/***/ })\n/******/ \t]);\n/************************************************************************/\n/******/ \t// The module cache\n/******/ \tvar __webpack_module_cache__ = {};\n/******/ \t\n/******/ \t// The require function\n/******/ \tfunction __nested_webpack_require_149699__(moduleId) {\n/******/ \t\t// Check if module is in cache\n/******/ \t\tvar cachedModule = __webpack_module_cache__[moduleId];\n/******/ \t\tif (cachedModule !== undefined) {\n/******/ \t\t\treturn cachedModule.exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = __webpack_module_cache__[moduleId] = {\n/******/ \t\t\t// no module.id needed\n/******/ \t\t\t// no module.loaded needed\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/ \t\n/******/ \t\t// Execute the module function\n/******/ \t\t__webpack_modules__[moduleId](module, module.exports, __nested_webpack_require_149699__);\n/******/ \t\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/ \t\n/************************************************************************/\n/******/ \t/* webpack/runtime/define property getters */\n/******/ \t(() => {\n/******/ \t\t// define getter functions for harmony exports\n/******/ \t\t__nested_webpack_require_149699__.d = (exports, definition) => {\n/******/ \t\t\tfor(var key in definition) {\n/******/ \t\t\t\tif(__nested_webpack_require_149699__.o(definition, key) && !__nested_webpack_require_149699__.o(exports, key)) {\n/******/ \t\t\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n/******/ \t\t\t\t}\n/******/ \t\t\t}\n/******/ \t\t};\n/******/ \t})();\n/******/ \t\n/******/ \t/* webpack/runtime/hasOwnProperty shorthand */\n/******/ \t(() => {\n/******/ \t\t__nested_webpack_require_149699__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))\n/******/ \t})();\n/******/ \t\n/******/ \t/* webpack/runtime/make namespace object */\n/******/ \t(() => {\n/******/ \t\t// define __esModule on exports\n/******/ \t\t__nested_webpack_require_149699__.r = (exports) => {\n/******/ \t\t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n/******/ \t\t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n/******/ \t\t\t}\n/******/ \t\t\tObject.defineProperty(exports, '__esModule', { value: true });\n/******/ \t\t};\n/******/ \t})();\n/******/ \t\n/************************************************************************/\nvar __webpack_exports__ = {};\n// This entry need to be wrapped in an IIFE because it need to be isolated against other modules in the chunk.\n(() => {\n__nested_webpack_require_149699__.r(__webpack_exports__);\n/* harmony export */ __nested_webpack_require_149699__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _core_VNode_Control__WEBPACK_IMPORTED_MODULE_0__ = __nested_webpack_require_149699__(1);\n/* harmony import */ var _core_VNode_decorators_Component__WEBPACK_IMPORTED_MODULE_1__ = __nested_webpack_require_149699__(37);\n/* harmony import */ var _core_VNode_decorators_Bind__WEBPACK_IMPORTED_MODULE_2__ = __nested_webpack_require_149699__(38);\n/* harmony import */ var _core_VNode_decorators_Watch__WEBPACK_IMPORTED_MODULE_3__ = __nested_webpack_require_149699__(39);\n/* harmony import */ var _core_VNode_VNode__WEBPACK_IMPORTED_MODULE_4__ = __nested_webpack_require_149699__(11);\n/* harmony import */ var _html_const__WEBPACK_IMPORTED_MODULE_5__ = __nested_webpack_require_149699__(17);\n/* harmony import */ var _core_observable_util_nextTick__WEBPACK_IMPORTED_MODULE_6__ = __nested_webpack_require_149699__(9);\n//控件基础类\r\n\r\n//类/属性 装饰器\r\n\r\n\r\n\r\n//VNode\r\n\r\n//Directives\r\n\r\n\r\nvar Tes = { Control: _core_VNode_Control__WEBPACK_IMPORTED_MODULE_0__[\"default\"], Component: _core_VNode_decorators_Component__WEBPACK_IMPORTED_MODULE_1__[\"default\"], Bind: _core_VNode_decorators_Bind__WEBPACK_IMPORTED_MODULE_2__[\"default\"], Watch: _core_VNode_decorators_Watch__WEBPACK_IMPORTED_MODULE_3__[\"default\"], VNode: _core_VNode_VNode__WEBPACK_IMPORTED_MODULE_4__[\"default\"], userDirectives: _html_const__WEBPACK_IMPORTED_MODULE_5__.userDirectives, nextTick: _core_observable_util_nextTick__WEBPACK_IMPORTED_MODULE_6__[\"default\"] };\r\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Tes);\r\n\n})();\n\n__webpack_exports__ = __webpack_exports__[\"default\"];\n/******/ \treturn __webpack_exports__;\n/******/ })()\n;\n});\n\n//# sourceURL=webpack://testest/./node_modules/tes-work/lib/Tes.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/compat get default export */
/******/ 	(() => {
/******/ 		// getDefaultExport function for compatibility with non-harmony modules
/******/ 		__webpack_require__.n = (module) => {
/******/ 			var getter = module && module.__esModule ?
/******/ 				() => (module['default']) :
/******/ 				() => (module);
/******/ 			__webpack_require__.d(getter, { a: getter });
/******/ 			return getter;
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = __webpack_require__("./index.js");
/******/ 	
/******/ })()
;